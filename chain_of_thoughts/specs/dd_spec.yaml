{
  "openapi": "3.0.1",
  "info":
    {
      "title": "Decision Delivery Service API",
      "description": "Decision Delivery Service project API.",
      "version": "v1",
    },
  "servers":
    [{ "url": "https://decision-delivery-internal.stage.ideasrms.com" }],
  "tags":
    [
      {
        "name": "VendorRoomTypeCodeMapping",
        "description": "Room Type Code Mapping Rest Controller",
      },
      {
        "name": "DailyBarDecisions",
        "description": "DailyBarDecision Rest Controller",
      },
      {
        "name": "OpenCloseRestrictionDecisions",
        "description": "openCloseRestrictionDecisions Rest Controller",
      },
      {
        "name": "OverbookingDecisions",
        "description": "OverbookingDecision Rest Controller",
      },
      {
        "name": "ProfitAdjustments",
        "description": "Profit Adjustments Rest Controller",
      },
      {
        "name": "MinLosDecisions",
        "description": "MinLosDecisions Rest Controller",
      },
      {
        "name": "LastRoomValueDecisions",
        "description": "LastRoomValueDecision Rest Controller",
      },
      {
        "name": "VendorRoomClassMapping",
        "description": "Vendor Room Class Mapping Rest Controller",
      },
      {
        "name": "VendorRateCodeMapping",
        "description": "Vendor Rate Code Mapping Rest Controller",
      },
      {
        "name": "DecisionDelivery",
        "description": "DecisionDelivery Rest Controller",
      },
      {
        "name": "DecisionDeliveryTracker",
        "description": "DecisionDeliveryTracker Rest Controller",
      },
    ],
  "paths":
    {
      "/api/v1/decisiondelivery/first/tracker/{clientCode}/{propertyCode}/{correlationId}/{messageId}":
        {
          "get":
            {
              "tags": ["DecisionDeliveryTracker"],
              "summary": "Get the First DecisionDeliveryTracker from Ascending order.",
              "description": "Get the first DecisionDeliveryTracker found by clientCode, propertyCode and messageId from an ascending order.",
              "operationId": "findByClientCodeAndPropertyCodeAndMessageIdOrderByClientCodeAsc",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "messageId",
                    "in": "path",
                    "description": "messageId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/DecisionDeliveryTrackerDto",
                                },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/DecisionDeliveryTrackerDto",
                                },
                            },
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/DecisionDeliveryTrackerDto",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "DecisionDeliveryTracker could not be found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "406":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/trackers/{clientCode}/{propertyCode}/{correlationId}/{messageId}":
        {
          "patch":
            {
              "tags": ["DecisionDeliveryTracker"],
              "summary": "Update tracker",
              "description": "Update DecisionDeliveryTrackers with status, warrnings, errors.",
              "operationId": "updateByMessageId",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "messageId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/DecisionDeliveryTrackerDto",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "DecisionDeliveryTracker for clientCode, propertyCode, correlationId messageId is not found!",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/trackers/{clientCode}/{propertyCode}/{messageId}":
        {
          "patch":
            {
              "tags": ["DecisionDeliveryTracker"],
              "summary": "Update tracker",
              "description": "Update DecisionDeliveryTrackers with status, warrnings, errors.",
              "operationId": "updateByMessageIdWithOutCorrelationId",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "messageId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/DecisionDeliveryTrackerDto",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "DecisionDeliveryTracker for clientCode, propertyCode, and messageId is not found!",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/trackers/{clientCode}/{propertyCode}/{correlationId}":
        {
          "get":
            {
              "tags": ["DecisionDeliveryTracker"],
              "summary": "Get collection of DecisionDeliveryTrackers.",
              "description": "Get all DecisionDeliveryTrackers that match clientCode, propertyCode, correlationId and status.",
              "operationId": "findByClientCodeAndPropertyCodeAndCorrelationIdAndStatusIn",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "status",
                    "in": "query",
                    "description": "status",
                    "required": false,
                    "schema":
                      {
                        "type": "array",
                        "items":
                          {
                            "type": "string",
                            "enum": ["PENDING", "SENT", "SUCCESS", "FAILED"],
                          },
                      },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "description": "Indicate the page number. follow link for pagination guidance <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/251822249/Pagination>Ideas Wiki for Rest Pagination</a>",
                    "required": false,
                    "schema":
                      { "type": "integer", "format": "int32", "default": 0 },
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "description": "Number of records per page. value more then max range will be taken as 10000 and less then zero as zero",
                    "required": false,
                    "schema":
                      {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                      },
                  },
                  {
                    "name": "sort",
                    "in": "query",
                    "description": "Sorting is using query param sort. Excepting comma separated value and optionaly direction, For more detail please refer <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/269811802/Sorting+on+collection>IdeaS Sorting on Collection</a>",
                    "required": false,
                    "schema":
                      { "type": "array", "items": { "type": "string" } },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfDecisionDeliveryTracker",
                                },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfDecisionDeliveryTracker",
                                },
                            },
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfDecisionDeliveryTracker",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "DecisionDeliveryTracker could not be found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "406":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["DecisionDeliveryTracker"],
              "summary": "Trackers bulk creation",
              "description": "Create DecisionDeliveryTrackers with clientCode, propertyCode, correlationId in pending status.",
              "operationId": "bulkCreation",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/DecisionDeliveryTrackerDto",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/DecisionDeliveryTrackerDto",
                                    },
                                },
                            },
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/DecisionDeliveryTrackerDto",
                                    },
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "DecisionDeliveryRequest could not be found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/requests/{clientCode}/{propertyCode}/{correlationId}":
        {
          "get":
            {
              "tags": ["DecisionDelivery"],
              "summary": "Return the summaries of Decisions.",
              "description": "If no record,  http Status 404(Not Found) will be returned.",
              "operationId": "getStatusByCorrelationId",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/DecisionDeliveryRequestDto",
                                },
                            },
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/DecisionDeliveryRequestDto",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Status Summaries could not be found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "406":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "patch":
            {
              "tags": ["DecisionDelivery"],
              "summary": "Start the Decision Delivery Process.",
              "description": "Initiate the delivery of Decisions.",
              "operationId": "startDecisionDeliveryProcess",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "DecisionDeliver patch posted." },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not found",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/requests/{clientCode}/{propertyCode}":
        {
          "post":
            {
              "tags": ["DecisionDelivery"],
              "summary": "Set up a request to deliver Decisions.",
              "description": "Deliver Decisions based on Decision Delivery Request.",
              "operationId": "setupDecisionDeliveryRequest",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Decision Delivery Request to process",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/DecisionDeliveryRequestDto",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Decision Delivery Request to send posted.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/DecisionDeliveryRequestDto",
                                },
                            },
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/DecisionDeliveryRequestDto",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/vendorRateCodeMapping/{vendorId}/{clientCode}/{propertyCode}":
        {
          "get":
            {
              "tags": ["VendorRateCodeMapping"],
              "summary": "Get all Vendor Rate Code Mapping",
              "description": "Get all Vendor Rate Code Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "getVendorRateCodeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/VendorRateCodeMappingDto",
                                    },
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "put":
            {
              "tags": ["VendorRateCodeMapping"],
              "summary": "Update all Vendor Rate Code Mappings",
              "description": "Update all Vendor Rate Code Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "updateVendorRateCodeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Vendor Rate Code Mapping",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/VendorRateCodeMappingDto",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "422":
                    {
                      "description": "Unprocessable entity",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["VendorRateCodeMapping"],
              "summary": "Post all Vendor Rate Code Mappings",
              "description": "Post all Vendor Rate Code Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "createVendorRateCodeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Vendor Rate Code Mapping",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/VendorRateCodeMappingDto",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "422":
                    {
                      "description": "Unprocessable entity",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["VendorRateCodeMapping"],
              "summary": "Delete all Vendor Rate Code Mappings",
              "description": "Delete all Vendor Rate Code Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "deleteVendorRateCodeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/vendorRoomClassMapping/{vendorId}/{clientCode}/{propertyCode}":
        {
          "get":
            {
              "tags": ["VendorRoomClassMapping"],
              "summary": "Get all Vendor Room Class Mapping",
              "description": "Get all Vendor Room Class Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "getVendorRoomClassMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/VendorRoomClassMappingDto",
                                    },
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "put":
            {
              "tags": ["VendorRoomClassMapping"],
              "summary": "Update all Vendor Room Class Mappings",
              "description": "Update all Vendor Room Class Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "updateVendorRoomClassMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Vendor Room Class Mapping",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/VendorRoomClassMappingDto",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "422":
                    {
                      "description": "Unprocessable entity",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["VendorRoomClassMapping"],
              "summary": "Post all Vendor Room Class Mappings",
              "description": "Post all Vendor Room Class Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "createVendorRoomClassMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Vendor Room Class Mapping",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/VendorRoomClassMappingDto",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "422":
                    {
                      "description": "Unprocessable entity",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["VendorRoomClassMapping"],
              "summary": "Delete all Vendor Room Class Mappings",
              "description": "Delete all Vendor Room Class Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "deleteVendorRoomClassMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/lastroomvalues/{clientCode}/{propertyCode}/{correlationId}":
        {
          "get":
            {
              "tags": ["LastRoomValueDecisions"],
              "summary": "Return lastRoomValue decisions.",
              "description": "Return lastRoomValue decisions entries found by clientCode, propertyCode, correlationId. With no records an empty list will be returned with 200-OK HTTP Status.",
              "operationId": "getLastRoomValueDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "description": "Indicate the page number. follow link for pagination guidance <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/251822249/Pagination>Ideas Wiki for Rest Pagination</a>",
                    "required": false,
                    "schema":
                      { "type": "integer", "format": "int32", "default": 0 },
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "description": "Number of records per page. value more then max range will be taken as 10000 and less then zero as zero",
                    "required": false,
                    "schema":
                      {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                      },
                  },
                  {
                    "name": "sort",
                    "in": "query",
                    "description": "Sorting is using query param sort. Excepting comma separated value and optionally direction, For more detail please refer <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/269811802/Sorting+on+collection>IdeaS Sorting on Collection</a>",
                    "required": false,
                    "schema":
                      { "type": "array", "items": { "type": "string" } },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfLastRoomValueDecision",
                                },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfLastRoomValueDecision",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["LastRoomValueDecisions"],
              "summary": "Create lastRoomValue decisions",
              "description": "Create lastRoomValue decisions entries",
              "operationId": "saveLastRoomValueDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "LastRoomValueDecision list to process",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/LastRoomValueDecision",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "LastRoomValueDecision(s) posted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["LastRoomValueDecisions"],
              "summary": "Delete existing lastRoomValue decisions.",
              "description": "Delete existing lastRoomValue decisions for the provided clientCode, propertyCode, correlationId",
              "operationId": "deleteLastRoomValueDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode for which last room value decision is sent",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode for which last room value decision is sent",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "LastRoomValueDecisions Deleted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/minloses/{clientCode}/{propertyCode}/{correlationId}":
        {
          "get":
            {
              "tags": ["MinLosDecisions"],
              "summary": "Return entries in MinLosDecisions collection by clientCode, propertyCode, correlationId.",
              "description": "Return entries in MinLosDecisions collection by clientCode, propertyCode, correlationId",
              "operationId": "getMinLosDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "description": "Indicate the page number. follow link for pagination guidance <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/251822249/Pagination>Ideas Wiki for Rest Pagination</a>",
                    "required": false,
                    "schema":
                      { "type": "integer", "format": "int32", "default": 0 },
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "description": "Number of records per page. value more then max range will be taken as 10000 and less then zero as zero",
                    "required": false,
                    "schema":
                      {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                      },
                  },
                  {
                    "name": "sort",
                    "in": "query",
                    "description": "Sorting is using query param sort. Excepting comma separated value and optionaly direction, For more detail please refer <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/269811802/Sorting+on+collection>IdeaS Sorting on Collection</a>",
                    "required": false,
                    "schema":
                      { "type": "array", "items": { "type": "string" } },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfMinLosDecision",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["MinLosDecisions"],
              "summary": "Create entries in MinLosDecisions collection.",
              "operationId": "saveMinLosDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "MinLosDecision list to process",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/MinLosDecision",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "MinLosDecision(s) posted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["MinLosDecisions"],
              "summary": "Delete existing entries in MinLosDecisions collection.",
              "description": "Delete existing entries in MinLosDecisions collection for the provided clientCode and propertyCode",
              "operationId": "deleteMinLosDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "MinLosDecisions Deleted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/profitAdjustments/{clientCode}/{propertyCode}/{correlationId}":
        {
          "get":
            {
              "tags": ["ProfitAdjustments"],
              "summary": "Get Profit Adjustments",
              "description": "Get Profit Adjustments for the provided clientCode and propertyCode",
              "operationId": "getProfitAdjustments",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode of Profit Adjustments",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode of Profit Adjustments",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId of Profit Adjustments",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "description": "Page number",
                    "required": false,
                    "schema":
                      {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                      },
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "description": "Number of records per page (see <a href=https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/251822249/Pagination>IDeaS Pagination</a>)",
                    "required": false,
                    "schema":
                      {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                      },
                  },
                  {
                    "name": "sort",
                    "in": "query",
                    "description": "Sorting (see <a href =https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/269811802/Sorting+on+collection>IDeaS Sorting</a>)",
                    "required": false,
                    "schema":
                      { "type": "array", "items": { "type": "string" } },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfProfitAdjustment",
                                },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfProfitAdjustment",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["ProfitAdjustments"],
              "summary": "Create Profit Adjustments",
              "description": "Create Profit Adjustments for the provided clientCode and propertyCode",
              "operationId": "createProfitAdjustments",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode of Profit Adjustments",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode of Profit Adjustments",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId of Profit Adjustments",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Profit Adjustments to create",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/ProfitAdjustment",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "Profit Adjustments created" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["ProfitAdjustments"],
              "summary": "Delete Profit Adjustments",
              "description": "Delete Profit Adjustment for the provided clientCode and propertyCode",
              "operationId": "deleteProfitAdjustments",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode of Profit Adjustments",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode of Profit Adjustments",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId of Profit Adjustments",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "Profit Adjustments Deleted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/overbookings/{clientCode}/{propertyCode}/{correlationId}":
        {
          "get":
            {
              "tags": ["OverbookingDecisions"],
              "summary": "Return overbooking decision resources by clientCode, propertyCode, correlationId.",
              "description": "Return overbooking decision resources by clientCode, propertyCode, correlationId. With no records an empty list will be returned with 200-OK HTTP Status.",
              "operationId": "getOverbookingDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "description": "Indicate the page number. follow link for pagination guidance <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/251822249/Pagination>Ideas Wiki for Rest Pagination</a>",
                    "required": false,
                    "schema":
                      { "type": "integer", "format": "int32", "default": 0 },
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "description": "Number of records per page. value more then max range will be taken as 10000 and less then zero as zero",
                    "required": false,
                    "schema":
                      {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                      },
                  },
                  {
                    "name": "sort",
                    "in": "query",
                    "description": "Sorting is using query param sort. Excepting comma separated value and optionally direction, For more detail please refer <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/269811802/Sorting+on+collection>IdeaS Sorting on Collection</a>",
                    "required": false,
                    "schema":
                      { "type": "array", "items": { "type": "string" } },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfOverbookingDecision",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["OverbookingDecisions"],
              "summary": "Create overbooking decision resources.",
              "description": "Create overbooking decision resources.",
              "operationId": "saveOverbookingDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "OverbookingDecision list to process",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/OverbookingDecision",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "HotelOverbookins posted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["OverbookingDecisions"],
              "summary": "Delete existing overbooking decision resources.",
              "description": "Delete existing overbooking decision resources for the provided clientCode and propertyCode",
              "operationId": "deleteOverbookingDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "OverbookingDecisions Deleted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/opencloserestrictiondecisions/{clientCode}/{propertyCode}/{correlationId}":
        {
          "get":
            {
              "tags": ["OpenCloseRestrictionDecisions"],
              "summary": "Get openCloseRestrictionDecisions Decisions",
              "description": "Get openCloseRestrictionDecisions for the provided clientCode, propertyCode and correlationId",
              "operationId": "getOpenCloseRestrictionDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode of openCloseRestrictionDecisions",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode of openCloseRestrictionDecisions",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId of openCloseRestrictionDecisions",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "description": "Page number",
                    "required": false,
                    "schema":
                      {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                      },
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "description": "Number of records per page (see <a href=https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/251822249/Pagination>IDeaS Pagination</a>)",
                    "required": false,
                    "schema":
                      {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                      },
                  },
                  {
                    "name": "sort",
                    "in": "query",
                    "description": "Sorting (see <a href =https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/269811802/Sorting+on+collection>IDeaS Sorting</a>)",
                    "required": false,
                    "schema":
                      { "type": "array", "items": { "type": "string" } },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfOpenCloseRestrictionDecisions",
                                },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfOpenCloseRestrictionDecisions",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["OpenCloseRestrictionDecisions"],
              "summary": "Create openCloseRestrictionDecisions Decisions",
              "description": "Create openCloseRestrictionDecisions for the provided clientCode, propertyCode and correlationId",
              "operationId": "createOpenCloseRestrictionDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode of openCloseRestrictionDecisions",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode of openCloseRestrictionDecisions",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId of openCloseRestrictionDecisions",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "openCloseRestrictionDecisions to create",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/OpenCloseRestrictionDecisions",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    { "description": "openCloseRestrictionDecisions created" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["OpenCloseRestrictionDecisions"],
              "summary": "Delete openCloseRestrictionDecisions Decisions",
              "description": "Delete openCloseRestrictionDecisions for the provided clientCode, propertyCode and correlationId",
              "operationId": "deleteOpenCloseRestrictionDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode of openCloseRestrictionDecisions",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode of openCloseRestrictionDecisions",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId of openCloseRestrictionDecisions",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "204":
                    { "description": "openCloseRestrictionDecisions Deleted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/dailybars/{clientCode}/{propertyCode}/{correlationId}":
        {
          "get":
            {
              "tags": ["DailyBarDecisions"],
              "summary": "Return daily bar decision resources by clientCode, propertyCode, correlationId.",
              "description": "Return daily bar decision resources by clientCode, propertyCode, correlationId. With no records an empty list will be returned with 200-OK HTTP Status.",
              "operationId": "getDailyBarDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "roomType",
                    "in": "query",
                    "description": "set of roomType to filter decisions",
                    "required": false,
                    "schema":
                      { "type": "array", "items": { "type": "string" } },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "description": "Indicate the page number. follow link for pagination guidance <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/251822249/Pagination>Ideas Wiki for Rest Pagination</a>",
                    "required": false,
                    "schema":
                      { "type": "integer", "format": "int32", "default": 0 },
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "description": "Number of records per page. value more then max range will be taken as 10000 and less then zero as zero",
                    "required": false,
                    "schema":
                      {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "default": 20,
                      },
                  },
                  {
                    "name": "sort",
                    "in": "query",
                    "description": "Sorting is using query param sort. Excepting comma separated value and optionally direction, For more detail please refer <a href = https://ideasinc.atlassian.net/wiki/spaces/AFD/pages/269811802/Sorting+on+collection>IdeaS Sorting on Collection</a>",
                    "required": false,
                    "schema":
                      { "type": "array", "items": { "type": "string" } },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfDailyBarDecision",
                                },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SlicedResourcesOfDailyBarDecision",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["DailyBarDecisions"],
              "summary": "Create daily bar decision resources.",
              "description": "Create daily bar decision resources.",
              "operationId": "saveDailyBarDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "DailyBarDecision list to process",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/DailyBarDecision",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "DailyBarDecision(s) posted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["DailyBarDecisions"],
              "summary": "Delete existing daily bar decision resources",
              "description": "Delete existing daily bar decision resources for the provided clientCode and propertyCode",
              "operationId": "deleteDailyBarDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "description": "clientCode for which daily bar decision is sent",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "description": "propertyCode for which daily bar decision is sent",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "path",
                    "description": "correlationId",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "DailyBarDecisions Deleted" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/roomTypeCodeMapping/{vendorId}/{clientCode}/{propertyCode}":
        {
          "get":
            {
              "tags": ["VendorRoomTypeCodeMapping"],
              "summary": "Get all Room Type Code Mapping",
              "description": "Deprecated. Should use GET /api/v1/decisiondelivery/vendorRoomTypeCodeMapping/{vendorId}/{clientCode}/{propertyCode} instead",
              "operationId": "getRoomTypeCodeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "additionalProperties":
                                    {
                                      "type": "array",
                                      "items": { "type": "string" },
                                    },
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
              "deprecated": true,
            },
          "put":
            {
              "tags": ["VendorRoomTypeCodeMapping"],
              "summary": "Update all Room Type Code Mappings",
              "description": "Deprecated. Should use PUT /api/v1/decisiondelivery/vendorRoomTypeCodeMapping/{vendorId}/{clientCode}/{propertyCode} instead",
              "operationId": "updateRoomTypeCodeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Room Type Code Mapping",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "object",
                              "additionalProperties":
                                {
                                  "type": "array",
                                  "items": { "type": "string" },
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "422":
                    {
                      "description": "Unprocessable entity",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
              "deprecated": true,
            },
          "post":
            {
              "tags": ["VendorRoomTypeCodeMapping"],
              "summary": "Post all Room Type Code Mappings",
              "description": "Deprecated. Should use POST /api/v1/decisiondelivery/vendorRoomTypeCodeMapping/{vendorId}/{clientCode}/{propertyCode} instead",
              "operationId": "createRoomTypeCodeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Room Type Code Mapping",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "object",
                              "additionalProperties":
                                {
                                  "type": "array",
                                  "items": { "type": "string" },
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "422":
                    {
                      "description": "Unprocessable entity",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
              "deprecated": true,
            },
          "delete":
            {
              "tags": ["VendorRoomTypeCodeMapping"],
              "summary": "Delete all Room Type Code Mappings",
              "description": "Deprecated. Should use DELETE /api/v1/decisiondelivery/vendorRoomTypeCodeMapping/{vendorId}/{clientCode}/{propertyCode} instead",
              "operationId": "deleteRoomTypeCodeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
              "deprecated": true,
            },
        },
      "/api/v1/decisiondelivery/vendorRoomTypeMapping/{vendorId}/{clientCode}/{propertyCode}":
        {
          "get":
            {
              "tags": ["VendorRoomTypeCodeMapping"],
              "summary": "Get all Vendor Room Type Mapping",
              "description": "Get all Vendor Room Type Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "getVendorRoomTypeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/VendorRoomTypeMappingDto",
                                    },
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "put":
            {
              "tags": ["VendorRoomTypeCodeMapping"],
              "summary": "Update all Vendor Room Type Mappings",
              "description": "Update all Vendor Room Type Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "updateVendorRoomTypeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Vendor Room Type Mapping",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/VendorRoomTypeMappingDto",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "422":
                    {
                      "description": "Unprocessable entity",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["VendorRoomTypeCodeMapping"],
              "summary": "Post all Vendor Room Type Mappings",
              "description": "Post all Vendor Room Type Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "createVendorRoomTypeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "description": "Vendor Room Type Mapping",
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/VendorRoomTypeMappingDto",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "422":
                    {
                      "description": "Unprocessable entity",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["VendorRoomTypeCodeMapping"],
              "summary": "Delete all Vendor Room Type Mappings",
              "description": "Delete all Vendor Room Type Mapping for the provided vendorId, clientCode and propertyCode",
              "operationId": "deleteVendorRoomTypeMappings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200": { "description": "OK" },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
            },
        },
      "/api/v1/decisiondelivery/roomTypeCodeMapping/{vendorId}/{clientCode}/{propertyCode}/{roomTypeCode}":
        {
          "get":
            {
              "tags": ["VendorRoomTypeCodeMapping"],
              "summary": "Get Room Type Code Mapping",
              "description": "Deprecated due to vendorPropertyCode was added to resource identifier, now call might be ambiguous in case of more than one vendorPropertyCode.  Should use GET /api/v1/decisiondelivery/vendorRoomTypeCodeMapping/{vendorId}/{clientCode}/{propertyCode} instead",
              "operationId": "getRoomTypeCodeMapping",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "roomTypeCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "additionalProperties":
                                    {
                                      "type": "array",
                                      "items": { "type": "string" },
                                    },
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "412":
                    {
                      "description": "Precondition failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Internal server error",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/ApiError" },
                            },
                        },
                    },
                },
              "deprecated": true,
            },
        },
      "/decisions/dailyBar":
        {
          "post":
            {
              "tags": ["daily-bar-decision-controller"],
              "operationId": "saveDailyBarDecisions_1",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/NucleusDailyBarDecision",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
          "delete":
            {
              "tags": ["daily-bar-decision-controller"],
              "operationId": "deleteDailyBarDecisions_1",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/decisions/FPLOSDecisions":
        {
          "get":
            {
              "tags": ["fplos-decision-controller"],
              "operationId": "getFPLOSDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "decisionType",
                    "in": "query",
                    "required": false,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "LAST_ROOM_VALUE",
                            "HOTEL_OVER_BOOKING",
                            "ROOM_TYPE_OVER_BOOKING",
                            "DAILY_BAR",
                            "AGILE_RATES",
                            "BAR_BY_LOS",
                            "MINLOS_BY_RATE_CODE",
                            "MINLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                            "MINLOS_BY_RATE_CATEGORY",
                            "MINLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                            "BAR_FPLOS_BY_HOTEL",
                            "BAR_FPLOS_BY_ROOM_TYPE",
                            "BAR_FPLOS_BY_HIERARCHY",
                            "BAR_FPLOS_BY_HIERARCHY_BY_ROOM_CLASS",
                            "BAR_FPLOS_BY_RANK",
                            "FPLOS",
                            "FPLOS_BY_RATE_CODE",
                            "FPLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                            "FPLOS_BY_RATE_CATEGORY",
                            "FPLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                            "INVENTORY_LIMIT",
                          ],
                      },
                  },
                  {
                    "name": "pageable",
                    "in": "query",
                    "required": true,
                    "schema": { "$ref": "#/components/schemas/Pageable" },
                  },
                  {
                    "name": "pagedResourcesAssembler",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/components/schemas/PagedResourcesAssemblerFPLOSDecision",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/PagedResources",
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["fplos-decision-controller"],
              "operationId": "createFPLOSDecision",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            { "$ref": "#/components/schemas/FPLOSDecision" },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/Resource" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["fplos-decision-controller"],
              "operationId": "deleteFPLOSDecisions",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "decisionType",
                    "in": "query",
                    "required": false,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "LAST_ROOM_VALUE",
                            "HOTEL_OVER_BOOKING",
                            "ROOM_TYPE_OVER_BOOKING",
                            "DAILY_BAR",
                            "AGILE_RATES",
                            "BAR_BY_LOS",
                            "MINLOS_BY_RATE_CODE",
                            "MINLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                            "MINLOS_BY_RATE_CATEGORY",
                            "MINLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                            "BAR_FPLOS_BY_HOTEL",
                            "BAR_FPLOS_BY_ROOM_TYPE",
                            "BAR_FPLOS_BY_HIERARCHY",
                            "BAR_FPLOS_BY_HIERARCHY_BY_ROOM_CLASS",
                            "BAR_FPLOS_BY_RANK",
                            "FPLOS",
                            "FPLOS_BY_RATE_CODE",
                            "FPLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                            "FPLOS_BY_RATE_CATEGORY",
                            "FPLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                            "INVENTORY_LIMIT",
                          ],
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/decisions/FPLOSDecisions/{id}":
        {
          "get":
            {
              "tags": ["fplos-decision-controller"],
              "operationId": "getFPLOSDecision",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/Resource" },
                            },
                        },
                    },
                },
            },
        },
      "/decisions/FPLOSDecisions/batch":
        {
          "post":
            {
              "tags": ["fplos-decision-controller"],
              "operationId": "createFPLOSDecisions",
              "parameters":
                [
                  {
                    "name": "decisionType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "LAST_ROOM_VALUE",
                            "HOTEL_OVER_BOOKING",
                            "ROOM_TYPE_OVER_BOOKING",
                            "DAILY_BAR",
                            "AGILE_RATES",
                            "BAR_BY_LOS",
                            "MINLOS_BY_RATE_CODE",
                            "MINLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                            "MINLOS_BY_RATE_CATEGORY",
                            "MINLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                            "BAR_FPLOS_BY_HOTEL",
                            "BAR_FPLOS_BY_ROOM_TYPE",
                            "BAR_FPLOS_BY_HIERARCHY",
                            "BAR_FPLOS_BY_HIERARCHY_BY_ROOM_CLASS",
                            "BAR_FPLOS_BY_RANK",
                            "FPLOS",
                            "FPLOS_BY_RATE_CODE",
                            "FPLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                            "FPLOS_BY_RATE_CATEGORY",
                            "FPLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                            "INVENTORY_LIMIT",
                          ],
                      },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/FPLOSDecision",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/decisions/roomTypeOverbookings":
        {
          "get":
            {
              "tags": ["room-type-overbooking-controller"],
              "operationId": "getRoomTypeOverbookings",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "pageable",
                    "in": "query",
                    "required": true,
                    "schema": { "$ref": "#/components/schemas/Pageable" },
                  },
                  {
                    "name": "pagedResourcesAssembler",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/components/schemas/PagedResourcesAssemblerOverbookingDecision",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/PagedResources",
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["room-type-overbooking-controller"],
              "operationId": "createRoomTypeOverbooking",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/OverbookingDecision",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/Resource" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["room-type-overbooking-controller"],
              "operationId": "deleteRoomTypeOverbookings",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/decisions/roomTypeOverbookings/{id}":
        {
          "get":
            {
              "tags": ["room-type-overbooking-controller"],
              "operationId": "getRoomTypeOverbooking",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/Resource" },
                            },
                        },
                    },
                },
            },
        },
      "/decisions/roomTypeOverbookings/batch":
        {
          "post":
            {
              "tags": ["room-type-overbooking-controller"],
              "operationId": "createRoomTypeOverbookings",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/OverbookingDecision",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/decisions/inventoryLimits":
        {
          "post":
            {
              "tags": ["inventory-limit-decision-controller"],
              "operationId": "saveInventoryLimitDecisions",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/InventoryLimitDecision",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/decisions/hotelOverbookings":
        {
          "get":
            {
              "tags": ["hotel-overbooking-controller"],
              "operationId": "getHotelOverbookings",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "pageable",
                    "in": "query",
                    "required": true,
                    "schema": { "$ref": "#/components/schemas/Pageable" },
                  },
                  {
                    "name": "pagedResourcesAssembler",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/components/schemas/PagedResourcesAssemblerOverbookingDecision",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/PagedResources",
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["hotel-overbooking-controller"],
              "operationId": "createHotelOverbooking",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/OverbookingDecision",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/Resource" },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["hotel-overbooking-controller"],
              "operationId": "deleteHotelOverbookings",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "type": "integer", "format": "int64" },
                            },
                        },
                    },
                },
            },
        },
      "/decisions/hotelOverbookings/{hotelOverbookingId}":
        {
          "get":
            {
              "tags": ["hotel-overbooking-controller"],
              "operationId": "getHotelOverbooking",
              "parameters":
                [
                  {
                    "name": "hotelOverbookingId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "hotelOverbookingResourceAssembler",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/components/schemas/HotelOverbookingResourceAssembler",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/Resource" },
                            },
                        },
                    },
                },
            },
        },
      "/decisions/hotelOverbookings/batch":
        {
          "post":
            {
              "tags": ["hotel-overbooking-controller"],
              "operationId": "createHotelOverbookings",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "array",
                              "items":
                                {
                                  "$ref": "#/components/schemas/OverbookingDecision",
                                },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/decisions/deliver":
        {
          "post":
            {
              "tags": ["decision-controller"],
              "operationId": "deliverDecisions",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/DecisionDeliveryRequest",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/DecisionDeliveryRequest",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/decisions/statistics/{clientCode}":
        {
          "get":
            {
              "tags": ["decision-controller"],
              "operationId": "getStatistics",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "status",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationId",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "startDate",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string", "format": "date-time" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/DecisionDeliveryAggregatedStatus",
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/ups/token":
        {
          "get":
            {
              "tags": ["mock-ups-controller"],
              "operationId": "token",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            { "schema": { "type": "string" } },
                        },
                    },
                },
            },
        },
      "/ups/property":
        {
          "get":
            {
              "tags": ["mock-ups-controller"],
              "operationId": "propertiesGet",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/PropertyDto" },
                            },
                        },
                    },
                },
            },
        },
      "/ngi/event":
        {
          "post":
            {
              "tags": ["nucleus-event-service"],
              "operationId": "receiveEvent",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/NucleusEventMessage",
                            },
                        },
                    },
                  "required": true,
                },
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/notifications/sent/{id}":
        {
          "put":
            {
              "tags": ["composite-notification-service"],
              "operationId": "sendNotification",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/notifications/pending":
        {
          "get":
            {
              "tags": ["composite-notification-service"],
              "operationId": "getPendingNotification",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "integrationType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE_CLIENT",
                            "OXI_SC",
                            "UNQUALIFIED_RATES",
                            "QUALIFIED_RATES",
                            "STR_MONTHLY",
                            "STR_WEEKLY",
                            "ACTIVITY_DATA",
                            "ACTIVITY_DATA_CDP",
                            "OXI_PMS",
                            "DEMAND360_DATA_LOAD",
                            "FOLS",
                            "RRA",
                            "AHWS_SC",
                            "HTNG",
                            "HILTON",
                            "MARS",
                            "OPERA_SC",
                            "REVENUE_STREAMS",
                            "APALEO",
                            "SIHOT",
                            "UNKNOWN",
                            "SALES_AND_CATERING",
                            "OHIP",
                            "OHIP_SNC",
                            "IDEAS_RMS",
                            "IDEASFILE",
                            "CLOUDBEDS",
                            "MEWS",
                            "PROFIT_ADJUSTMENT",
                          ],
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/NucleusCompositeNotification",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/notifications/sent":
        {
          "get":
            {
              "tags": ["composite-notification-service"],
              "operationId": "getSentNotifications",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "integrationType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE_CLIENT",
                            "OXI_SC",
                            "UNQUALIFIED_RATES",
                            "QUALIFIED_RATES",
                            "STR_MONTHLY",
                            "STR_WEEKLY",
                            "ACTIVITY_DATA",
                            "ACTIVITY_DATA_CDP",
                            "OXI_PMS",
                            "DEMAND360_DATA_LOAD",
                            "FOLS",
                            "RRA",
                            "AHWS_SC",
                            "HTNG",
                            "HILTON",
                            "MARS",
                            "OPERA_SC",
                            "REVENUE_STREAMS",
                            "APALEO",
                            "SIHOT",
                            "UNKNOWN",
                            "SALES_AND_CATERING",
                            "OHIP",
                            "OHIP_SNC",
                            "IDEAS_RMS",
                            "IDEASFILE",
                            "CLOUDBEDS",
                            "MEWS",
                            "PROFIT_ADJUSTMENT",
                          ],
                      },
                  },
                  {
                    "name": "pageable",
                    "in": "query",
                    "required": true,
                    "schema": { "$ref": "#/components/schemas/Pageable" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/PageNucleusCompositeNotification",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/notifications/pending/{id}":
        {
          "delete":
            {
              "tags": ["composite-notification-service"],
              "operationId": "deleteNotification",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/ups/cache/invalidate":
        {
          "post":
            {
              "tags": ["ups-cache-rest-controller"],
              "operationId": "invalidate",
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/errorMessage/payload/{id}":
        {
          "get":
            {
              "tags": ["monitor-message-service"],
              "operationId": "downloadErrorPayload",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    { "type": "string", "format": "byte" },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/completedMessage/payload/{id}":
        {
          "get":
            {
              "tags": ["monitor-message-service"],
              "operationId": "downloadCompletedPayload",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    { "type": "string", "format": "byte" },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/errorMessage/retry":
        {
          "get":
            {
              "tags": ["error-message-service"],
              "operationId": "retry",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SimpleObjectRestWrapperBoolean",
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["error-message-service"],
              "operationId": "retryBulk",
              "parameters":
                [
                  {
                    "name": "search",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "additionalProperties": { "type": "string" },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/errorMessage/abandon":
        {
          "get":
            {
              "tags": ["error-message-service"],
              "operationId": "abandon",
              "parameters":
                [
                  {
                    "name": "id",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SimpleObjectRestWrapperBoolean",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/errorMessage/job":
        {
          "delete":
            {
              "tags": ["error-message-service"],
              "operationId": "delete",
              "parameters":
                [
                  {
                    "name": "jobName",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SimpleObjectRestWrapperLong",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/errorMessage/property":
        {
          "delete":
            {
              "tags": ["error-message-service"],
              "operationId": "delete_1",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SimpleObjectRestWrapperLong",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/nucleusCompletedMessage/job":
        {
          "delete":
            {
              "tags": ["completed-message-service"],
              "operationId": "deleteByJobName",
              "parameters":
                [
                  {
                    "name": "jobName",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SimpleObjectRestWrapperLong",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/nucleusCompletedMessage/property":
        {
          "delete":
            {
              "tags": ["completed-message-service"],
              "operationId": "delete_2",
              "parameters":
                [
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SimpleObjectRestWrapperLong",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/correlationMetadataService":
        {
          "get":
            {
              "tags": ["correlation-metadata-service"],
              "operationId": "findExistingCorrelationMetadata",
              "parameters":
                [
                  {
                    "name": "integrationType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE_CLIENT",
                            "OXI_SC",
                            "UNQUALIFIED_RATES",
                            "QUALIFIED_RATES",
                            "STR_MONTHLY",
                            "STR_WEEKLY",
                            "ACTIVITY_DATA",
                            "ACTIVITY_DATA_CDP",
                            "OXI_PMS",
                            "DEMAND360_DATA_LOAD",
                            "FOLS",
                            "RRA",
                            "AHWS_SC",
                            "HTNG",
                            "HILTON",
                            "MARS",
                            "OPERA_SC",
                            "REVENUE_STREAMS",
                            "APALEO",
                            "SIHOT",
                            "UNKNOWN",
                            "SALES_AND_CATERING",
                            "OHIP",
                            "OHIP_SNC",
                            "IDEAS_RMS",
                            "IDEASFILE",
                            "CLOUDBEDS",
                            "MEWS",
                            "PROFIT_ADJUSTMENT",
                          ],
                      },
                  },
                  {
                    "name": "sendingSystemPropertyId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "name",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/NucleusCorrelationMetadata",
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["correlation-metadata-service"],
              "operationId": "createCorrelationMetadata",
              "parameters":
                [
                  {
                    "name": "integrationType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE_CLIENT",
                            "OXI_SC",
                            "UNQUALIFIED_RATES",
                            "QUALIFIED_RATES",
                            "STR_MONTHLY",
                            "STR_WEEKLY",
                            "ACTIVITY_DATA",
                            "ACTIVITY_DATA_CDP",
                            "OXI_PMS",
                            "DEMAND360_DATA_LOAD",
                            "FOLS",
                            "RRA",
                            "AHWS_SC",
                            "HTNG",
                            "HILTON",
                            "MARS",
                            "OPERA_SC",
                            "REVENUE_STREAMS",
                            "APALEO",
                            "SIHOT",
                            "UNKNOWN",
                            "SALES_AND_CATERING",
                            "OHIP",
                            "OHIP_SNC",
                            "IDEAS_RMS",
                            "IDEASFILE",
                            "CLOUDBEDS",
                            "MEWS",
                            "PROFIT_ADJUSTMENT",
                          ],
                      },
                  },
                  {
                    "name": "sendingSystemPropertyId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "businessModule",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE",
                            "STR",
                            "DEMAND_360",
                            "RESERVATION",
                            "FOLS",
                            "RRA",
                            "REVENUE_STREAMS",
                          ],
                      },
                  },
                  {
                    "name": "name",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "captureDateTime",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string", "format": "date-time" },
                  },
                  {
                    "name": "fileLocation",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/NucleusCorrelationMetadata",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/correlationMetadataService/search":
        {
          "get":
            {
              "tags": ["correlation-metadata-service"],
              "operationId": "searchCorrelationMetadataByStatus",
              "parameters":
                [
                  {
                    "name": "integrationType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE_CLIENT",
                            "OXI_SC",
                            "UNQUALIFIED_RATES",
                            "QUALIFIED_RATES",
                            "STR_MONTHLY",
                            "STR_WEEKLY",
                            "ACTIVITY_DATA",
                            "ACTIVITY_DATA_CDP",
                            "OXI_PMS",
                            "DEMAND360_DATA_LOAD",
                            "FOLS",
                            "RRA",
                            "AHWS_SC",
                            "HTNG",
                            "HILTON",
                            "MARS",
                            "OPERA_SC",
                            "REVENUE_STREAMS",
                            "APALEO",
                            "SIHOT",
                            "UNKNOWN",
                            "SALES_AND_CATERING",
                            "OHIP",
                            "OHIP_SNC",
                            "IDEAS_RMS",
                            "IDEASFILE",
                            "CLOUDBEDS",
                            "MEWS",
                            "PROFIT_ADJUSTMENT",
                          ],
                      },
                  },
                  {
                    "name": "sendingSystemPropertyId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "correlationStatus",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "IN_PROGRESS",
                            "SUCCESSFUL",
                            "FAILED",
                            "ABANDONED",
                            "DUPLICATE",
                          ],
                      },
                  },
                  {
                    "name": "startDate",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string", "format": "date-time" },
                  },
                  {
                    "name": "endDate",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string", "format": "date-time" },
                  },
                  {
                    "name": "pageable",
                    "in": "query",
                    "required": true,
                    "schema": { "$ref": "#/components/schemas/Pageable" },
                  },
                  {
                    "name": "pagedResourcesAssembler",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "$ref": "#/components/schemas/PagedResourcesAssemblerNucleusCorrelationMetadata",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/PagedResourcesResourceNucleusCorrelationMetadata",
                                },
                            },
                          "application/hal+json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/PagedResourcesResourceNucleusCorrelationMetadata",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/rabbit/admin/consumers/{channelName}/restart":
        {
          "delete":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "restart",
              "parameters":
                [
                  {
                    "name": "channelName",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/rabbit/admin/messages/{channelName}/write":
        {
          "post":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "writeToFile",
              "parameters":
                [
                  {
                    "name": "contains",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "channelName",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "numberOfMessageToWrite",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "integer", "format": "int32" },
                  },
                  {
                    "name": "fileName",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/rabbit/admin/readAndReQueue":
        {
          "put":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "readAndReQueue",
              "parameters":
                [
                  {
                    "name": "channelName",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/MessageObject",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/rabbit/admin/messages/{channelName}/requeue":
        {
          "post":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "requeueFromFile",
              "parameters":
                [
                  {
                    "name": "channelName",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "fileName",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/rabbit/admin/consumers/{channelName}/purgeBy":
        {
          "delete":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "readAndPurgeByMatcher",
              "parameters":
                [
                  {
                    "name": "contains",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "channelName",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/rabbit/admin/consumers/stop":
        {
          "delete":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "stopAll",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/rabbit/admin/consumers/start":
        {
          "delete":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "startAll",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/rabbit/admin/queues/orphaned":
        {
          "get":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "getOrphanedQueues",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/QueueInfo",
                                    },
                                },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "deleteOrphanedQueues",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items": { "type": "string" },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/rabbit/admin/consumers/{channelName}/start":
        {
          "delete":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "start",
              "parameters":
                [
                  {
                    "name": "channelName",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/rabbit/admin/consumers/{channelName}/stop":
        {
          "delete":
            {
              "tags": ["rabbit-admin-util-service"],
              "operationId": "stop",
              "parameters":
                [
                  {
                    "name": "channelName",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "string" } } },
                    },
                },
            },
        },
      "/cache/invalidate":
        {
          "post":
            {
              "tags": ["integration-settings-cache-rest-controller"],
              "operationId": "invalidate_1",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "fromPeer",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "boolean" },
                  },
                ],
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/integration/migrate/property/settings/{vendorId}/{clientCode}/{propertyCode}":
        {
          "put":
            {
              "tags": ["integration-settings-migration-controller"],
              "operationId": "migratePropertySettings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/IntegrationPropertyConfig",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/integration/settings":
        {
          "post":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "createSettings",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "object",
                              "additionalProperties": { "type": "object" },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/BaseIntegrationConfig",
                                },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "deleteAllSettings",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                ],
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/integration/settings/{settingsId}":
        {
          "get":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "getSettings",
              "parameters":
                [
                  {
                    "name": "settingsId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/BaseIntegrationConfig",
                                },
                            },
                        },
                    },
                },
            },
          "put":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "updateSettings",
              "parameters":
                [
                  {
                    "name": "settingsId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "object",
                              "additionalProperties": { "type": "object" },
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/BaseIntegrationConfig",
                                },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "deleteSettings",
              "parameters":
                [
                  {
                    "name": "settingsId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/integration/integrationTypes":
        {
          "get":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "getIntegrationTypes",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "uniqueItems": true,
                                  "type": "array",
                                  "items":
                                    {
                                      "type": "string",
                                      "enum":
                                        [
                                          "FUNCTION_SPACE_CLIENT",
                                          "OXI_SC",
                                          "UNQUALIFIED_RATES",
                                          "QUALIFIED_RATES",
                                          "STR_MONTHLY",
                                          "STR_WEEKLY",
                                          "ACTIVITY_DATA",
                                          "ACTIVITY_DATA_CDP",
                                          "OXI_PMS",
                                          "DEMAND360_DATA_LOAD",
                                          "FOLS",
                                          "RRA",
                                          "AHWS_SC",
                                          "HTNG",
                                          "HILTON",
                                          "MARS",
                                          "OPERA_SC",
                                          "REVENUE_STREAMS",
                                          "APALEO",
                                          "SIHOT",
                                          "UNKNOWN",
                                          "SALES_AND_CATERING",
                                          "OHIP",
                                          "OHIP_SNC",
                                          "IDEAS_RMS",
                                          "IDEASFILE",
                                          "CLOUDBEDS",
                                          "MEWS",
                                          "PROFIT_ADJUSTMENT",
                                        ],
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/integration/settings/vendors":
        {
          "get":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "getVendorConfigurations",
              "parameters":
                [
                  {
                    "name": "page",
                    "in": "query",
                    "required": true,
                    "schema": { "$ref": "#/components/schemas/Pageable" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/PageIntegrationVendorConfig",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/integration/settings/clients":
        {
          "get":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "getClientConfigurations",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "required": true,
                    "schema": { "$ref": "#/components/schemas/Pageable" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/PageIntegrationClientConfig",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/integration/settings/properties":
        {
          "get":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "getAllPropertyConfigurations",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "required": true,
                    "schema": { "$ref": "#/components/schemas/Pageable" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/PageIntegrationPropertyConfig",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/integration/settings/property":
        {
          "delete":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "getAllPropertyConfigurations_1",
              "parameters":
                [
                  {
                    "name": "vendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/integration/setting/attr":
        {
          "put":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "updateSetting",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            { "$ref": "#/components/schemas/QualifiedSetting" },
                        },
                    },
                  "required": true,
                },
              "responses": { "200": { "description": "OK" } },
            },
          "delete":
            {
              "tags": ["integration-settings-rest-controller"],
              "operationId": "removeSetting",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            { "$ref": "#/components/schemas/QualifiedSetting" },
                        },
                    },
                  "required": true,
                },
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/vendor/list":
        {
          "get":
            {
              "tags": ["vendor-config-service"],
              "operationId": "getVendors",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items": { "type": "string" },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/vendor/addparameter":
        {
          "post":
            {
              "tags": ["vendor-config-service"],
              "operationId": "addVendorParameter",
              "parameters":
                [
                  {
                    "name": "inboundVendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "name",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "value",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "object" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SimpleObjectRestWrapperString",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/vendor/existence/{inboundVendorId}":
        {
          "get":
            {
              "tags": ["vendor-config-service"],
              "operationId": "vendorExists",
              "parameters":
                [
                  {
                    "name": "inboundVendorId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "boolean" } } },
                    },
                },
            },
        },
      "/vendorConfigParams/delete":
        {
          "delete":
            {
              "tags": ["vendor-config-service"],
              "operationId": "delete_3",
              "parameters":
                [
                  {
                    "name": "inboundVendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/propertyConfig":
        {
          "get":
            {
              "tags": ["property-config-rest-controller"],
              "operationId": "getPropertyConfig",
              "parameters":
                [
                  {
                    "name": "integrationType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE_CLIENT",
                            "OXI_SC",
                            "UNQUALIFIED_RATES",
                            "QUALIFIED_RATES",
                            "STR_MONTHLY",
                            "STR_WEEKLY",
                            "ACTIVITY_DATA",
                            "ACTIVITY_DATA_CDP",
                            "OXI_PMS",
                            "DEMAND360_DATA_LOAD",
                            "FOLS",
                            "RRA",
                            "AHWS_SC",
                            "HTNG",
                            "HILTON",
                            "MARS",
                            "OPERA_SC",
                            "REVENUE_STREAMS",
                            "APALEO",
                            "SIHOT",
                            "UNKNOWN",
                            "SALES_AND_CATERING",
                            "OHIP",
                            "OHIP_SNC",
                            "IDEAS_RMS",
                            "IDEASFILE",
                            "CLOUDBEDS",
                            "MEWS",
                            "PROFIT_ADJUSTMENT",
                          ],
                      },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/HotelConfigParams",
                                },
                            },
                        },
                    },
                },
            },
          "put":
            {
              "tags": ["property-config-rest-controller"],
              "operationId": "updatePropertyConfig",
              "parameters":
                [
                  {
                    "name": "integrationType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE_CLIENT",
                            "OXI_SC",
                            "UNQUALIFIED_RATES",
                            "QUALIFIED_RATES",
                            "STR_MONTHLY",
                            "STR_WEEKLY",
                            "ACTIVITY_DATA",
                            "ACTIVITY_DATA_CDP",
                            "OXI_PMS",
                            "DEMAND360_DATA_LOAD",
                            "FOLS",
                            "RRA",
                            "AHWS_SC",
                            "HTNG",
                            "HILTON",
                            "MARS",
                            "OPERA_SC",
                            "REVENUE_STREAMS",
                            "APALEO",
                            "SIHOT",
                            "UNKNOWN",
                            "SALES_AND_CATERING",
                            "OHIP",
                            "OHIP_SNC",
                            "IDEAS_RMS",
                            "IDEASFILE",
                            "CLOUDBEDS",
                            "MEWS",
                            "PROFIT_ADJUSTMENT",
                          ],
                      },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/HotelConfigParams",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/HotelConfigParams",
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["property-config-rest-controller"],
              "operationId": "createPropertyConfig",
              "parameters":
                [
                  {
                    "name": "integrationType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE_CLIENT",
                            "OXI_SC",
                            "UNQUALIFIED_RATES",
                            "QUALIFIED_RATES",
                            "STR_MONTHLY",
                            "STR_WEEKLY",
                            "ACTIVITY_DATA",
                            "ACTIVITY_DATA_CDP",
                            "OXI_PMS",
                            "DEMAND360_DATA_LOAD",
                            "FOLS",
                            "RRA",
                            "AHWS_SC",
                            "HTNG",
                            "HILTON",
                            "MARS",
                            "OPERA_SC",
                            "REVENUE_STREAMS",
                            "APALEO",
                            "SIHOT",
                            "UNKNOWN",
                            "SALES_AND_CATERING",
                            "OHIP",
                            "OHIP_SNC",
                            "IDEAS_RMS",
                            "IDEASFILE",
                            "CLOUDBEDS",
                            "MEWS",
                            "PROFIT_ADJUSTMENT",
                          ],
                      },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/HotelConfigParams",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/HotelConfigParams",
                                },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["property-config-rest-controller"],
              "operationId": "deletePropertyConfig",
              "parameters":
                [
                  {
                    "name": "integrationType",
                    "in": "query",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "enum":
                          [
                            "FUNCTION_SPACE_CLIENT",
                            "OXI_SC",
                            "UNQUALIFIED_RATES",
                            "QUALIFIED_RATES",
                            "STR_MONTHLY",
                            "STR_WEEKLY",
                            "ACTIVITY_DATA",
                            "ACTIVITY_DATA_CDP",
                            "OXI_PMS",
                            "DEMAND360_DATA_LOAD",
                            "FOLS",
                            "RRA",
                            "AHWS_SC",
                            "HTNG",
                            "HILTON",
                            "MARS",
                            "OPERA_SC",
                            "REVENUE_STREAMS",
                            "APALEO",
                            "SIHOT",
                            "UNKNOWN",
                            "SALES_AND_CATERING",
                            "OHIP",
                            "OHIP_SNC",
                            "IDEAS_RMS",
                            "IDEASFILE",
                            "CLOUDBEDS",
                            "MEWS",
                            "PROFIT_ADJUSTMENT",
                          ],
                      },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    { "application/json": { "schema": { "type": "string" } } },
                },
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/nucleusPropertyConfig":
        {
          "get":
            {
              "tags": ["nucleus-property-config-rest-controller"],
              "operationId": "getPropertyConfig_1",
              "parameters":
                [
                  {
                    "name": "inboundVendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/HotelConfigParams",
                                },
                            },
                        },
                    },
                },
            },
          "put":
            {
              "tags": ["nucleus-property-config-rest-controller"],
              "operationId": "updatePropertyConfig_1",
              "parameters":
                [
                  {
                    "name": "inboundVendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/HotelConfigParams",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/HotelConfigParams",
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["nucleus-property-config-rest-controller"],
              "operationId": "createPropertyConfig_1",
              "parameters":
                [
                  {
                    "name": "inboundVendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/HotelConfigParams",
                            },
                        },
                    },
                  "required": true,
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/HotelConfigParams",
                                },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["nucleus-property-config-rest-controller"],
              "operationId": "deletePropertyConfig_1",
              "parameters":
                [
                  {
                    "name": "inboundVendorId",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "clientCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "propertyCode",
                    "in": "query",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/mongo/indexes/report":
        {
          "get":
            {
              "tags": ["nucleus-mongo-index-controller"],
              "operationId": "getReport",
              "parameters":
                [
                  {
                    "name": "type",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string", "default": "redundant" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content": { "*/*": { "schema": { "type": "object" } } },
                    },
                },
            },
        },
      "/mongo/export":
        {
          "post":
            {
              "tags": ["nucleus-mongo-controller"],
              "operationId": "export",
              "parameters":
                [
                  {
                    "name": "entityNames",
                    "in": "query",
                    "required": false,
                    "schema":
                      { "type": "array", "items": { "type": "string" } },
                  },
                  {
                    "name": "search",
                    "in": "query",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema": { "$ref": "#/components/schemas/Link" },
                            },
                        },
                    },
                },
            },
        },
      "/mongo/dbstats/{database}":
        {
          "get":
            {
              "tags": ["nucleus-mongo-controller"],
              "operationId": "getDbStats",
              "parameters":
                [
                  {
                    "name": "database",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    { "empty": { "type": "boolean" } },
                                  "additionalProperties": { "type": "object" },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/mongo/indexstats/{database}/{collectionName}":
        {
          "get":
            {
              "tags": ["nucleus-mongo-controller"],
              "operationId": "getIndexStats",
              "parameters":
                [
                  {
                    "name": "database",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "collectionName",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    { "$ref": "#/components/schemas/Document" },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/mongo/currentop":
        {
          "get":
            {
              "tags": ["nucleus-mongo-controller"],
              "operationId": "getCurrentOp",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    { "empty": { "type": "boolean" } },
                                  "additionalProperties": { "type": "object" },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/mongo/serverStatus":
        {
          "get":
            {
              "tags": ["nucleus-mongo-controller"],
              "operationId": "getServerStatus",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "object",
                                  "properties":
                                    { "empty": { "type": "boolean" } },
                                  "additionalProperties": { "type": "object" },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/mongo/download/{mongoOperationAuditId}":
        {
          "get":
            {
              "tags": ["nucleus-mongo-controller"],
              "operationId": "downloadResult",
              "parameters":
                [
                  {
                    "name": "mongoOperationAuditId",
                    "in": "path",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses": { "200": { "description": "OK" } },
            },
        },
      "/mongo/execute":
        {
          "post":
            {
              "tags": ["nucleus-mongo-controller"],
              "operationId": "execute",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "type": "object",
                              "properties":
                                {
                                  "file":
                                    { "type": "string", "format": "binary" },
                                },
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema": { "$ref": "#/components/schemas/Link" },
                            },
                        },
                    },
                },
            },
        },
      "/swagger-resources":
        {
          "get":
            {
              "tags": ["api-resource-controller"],
              "operationId": "swaggerResources_6",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/SwaggerResource",
                                    },
                                },
                            },
                        },
                    },
                },
            },
          "put":
            {
              "tags": ["api-resource-controller"],
              "operationId": "swaggerResources",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/SwaggerResource",
                                    },
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["api-resource-controller"],
              "operationId": "swaggerResources_4",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/SwaggerResource",
                                    },
                                },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["api-resource-controller"],
              "operationId": "swaggerResources_3",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/SwaggerResource",
                                    },
                                },
                            },
                        },
                    },
                },
            },
          "options":
            {
              "tags": ["api-resource-controller"],
              "operationId": "swaggerResources_2",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/SwaggerResource",
                                    },
                                },
                            },
                        },
                    },
                },
            },
          "head":
            {
              "tags": ["api-resource-controller"],
              "operationId": "swaggerResources_1",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/SwaggerResource",
                                    },
                                },
                            },
                        },
                    },
                },
            },
          "patch":
            {
              "tags": ["api-resource-controller"],
              "operationId": "swaggerResources_5",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "type": "array",
                                  "items":
                                    {
                                      "$ref": "#/components/schemas/SwaggerResource",
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
      "/swagger-resources/configuration/ui":
        {
          "get":
            {
              "tags": ["api-resource-controller"],
              "operationId": "uiConfiguration_6",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/UiConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "put":
            {
              "tags": ["api-resource-controller"],
              "operationId": "uiConfiguration",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/UiConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["api-resource-controller"],
              "operationId": "uiConfiguration_4",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/UiConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["api-resource-controller"],
              "operationId": "uiConfiguration_3",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/UiConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "options":
            {
              "tags": ["api-resource-controller"],
              "operationId": "uiConfiguration_2",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/UiConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "head":
            {
              "tags": ["api-resource-controller"],
              "operationId": "uiConfiguration_1",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/UiConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "patch":
            {
              "tags": ["api-resource-controller"],
              "operationId": "uiConfiguration_5",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/UiConfiguration",
                                },
                            },
                        },
                    },
                },
            },
        },
      "/swagger-resources/configuration/security":
        {
          "get":
            {
              "tags": ["api-resource-controller"],
              "operationId": "securityConfiguration_6",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SecurityConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "put":
            {
              "tags": ["api-resource-controller"],
              "operationId": "securityConfiguration",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SecurityConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "post":
            {
              "tags": ["api-resource-controller"],
              "operationId": "securityConfiguration_4",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SecurityConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "delete":
            {
              "tags": ["api-resource-controller"],
              "operationId": "securityConfiguration_3",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SecurityConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "options":
            {
              "tags": ["api-resource-controller"],
              "operationId": "securityConfiguration_2",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SecurityConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "head":
            {
              "tags": ["api-resource-controller"],
              "operationId": "securityConfiguration_1",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SecurityConfiguration",
                                },
                            },
                        },
                    },
                },
            },
          "patch":
            {
              "tags": ["api-resource-controller"],
              "operationId": "securityConfiguration_5",
              "responses":
                {
                  "200":
                    {
                      "description": "OK",
                      "content":
                        {
                          "*/*":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/SecurityConfiguration",
                                },
                            },
                        },
                    },
                },
            },
        },
    },
  "components":
    {
      "schemas":
        {
          "DecisionDeliveryTrackerDto":
            {
              "required": ["messageId"],
              "type": "object",
              "properties":
                {
                  "messageId": { "type": "string" },
                  "status":
                    {
                      "type": "string",
                      "enum": ["PENDING", "SENT", "SUCCESS", "FAILED"],
                    },
                  "errors": { "type": "array", "items": { "type": "string" } },
                  "warnings":
                    { "type": "array", "items": { "type": "string" } },
                },
            },
          "ApiError":
            {
              "required": ["error", "message", "status", "timestamp"],
              "type": "object",
              "properties":
                {
                  "error":
                    { "type": "string", "description": "HTTP status message" },
                  "exception":
                    {
                      "type": "string",
                      "description": "Fully qualified exception type",
                    },
                  "message":
                    {
                      "type": "string",
                      "description": "Exception / error message",
                    },
                  "path": { "type": "string" },
                  "status":
                    {
                      "type": "integer",
                      "description": "HTTP status code for the error",
                      "format": "int32",
                    },
                  "timestamp":
                    {
                      "type": "string",
                      "description": "Date and time the error occurred",
                      "format": "date-time",
                    },
                },
            },
          "Link":
            {
              "type": "object",
              "properties":
                {
                  "deprecation": { "type": "string" },
                  "href": { "type": "string" },
                  "hreflang": { "type": "string" },
                  "media": { "type": "string" },
                  "rel": { "type": "string" },
                  "templated": { "type": "boolean" },
                  "title": { "type": "string" },
                  "type": { "type": "string" },
                },
            },
          "SliceMetadata":
            {
              "type": "object",
              "properties":
                {
                  "number": { "type": "integer", "format": "int64" },
                  "size": { "type": "integer", "format": "int64" },
                },
            },
          "SlicedResourcesOfDecisionDeliveryTracker":
            {
              "type": "object",
              "properties":
                {
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/DecisionDeliveryTrackerDto",
                        },
                    },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                  "page": { "$ref": "#/components/schemas/SliceMetadata" },
                },
            },
          "DecisionDeliveryRequestDto":
            {
              "required":
                [
                  "clientEnvironmentUrl",
                  "decisionType",
                  "decisionUploadType",
                  "vendorId",
                ],
              "type": "object",
              "properties":
                {
                  "vendorId":
                    {
                      "type": "string",
                      "description": "Vendor id to send decisions to",
                    },
                  "clientEnvironmentUrl":
                    {
                      "type": "string",
                      "description": "Client Environment reply to, URL for callacks.",
                    },
                  "clientEnvironmentName":
                    {
                      "type": "string",
                      "description": "Client Environment name reply to, URL for callacks.",
                    },
                  "clientEnvironmentId":
                    {
                      "type": "string",
                      "description": "Client specific metadata that ties back to client system.",
                    },
                  "processId":
                    {
                      "type": "string",
                      "description": "Process id used for BMR events. (Business Monitoring)",
                    },
                  "correlationId":
                    { "type": "string", "description": "Correlation ID" },
                  "decisionUploadType":
                    { "type": "string", "enum": ["FULL", "DIFFERENTIAL"] },
                  "decisionType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "LAST_ROOM_VALUE_BY_ROOM_CLASS",
                          "LAST_ROOM_VALUE_BY_ROOM_TYPE",
                          "HOTEL_OVER_BOOKING",
                          "ROOM_TYPE_OVER_BOOKING",
                          "DAILY_BAR",
                          "AGILE_RATES",
                          "BAR_BY_LOS",
                          "MINLOS_BY_RATE_CODE",
                          "MINLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "MINLOS_BY_RATE_CATEGORY",
                          "MINLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HOTEL",
                          "BAR_FPLOS_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HIERARCHY",
                          "BAR_FPLOS_BY_HIERARCHY_BY_ROOM_CLASS",
                          "BAR_FPLOS_BY_RANK",
                          "FPLOS",
                          "FPLOS_BY_RATE_CODE",
                          "FPLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "FPLOS_BY_RATE_CATEGORY",
                          "FPLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "PROFIT_ADJUSTMENT",
                          "HOTEL_CLOSE_TO_ARRIVAL",
                        ],
                    },
                  "destinationType":
                    {
                      "type": "string",
                      "description": "!!! Deprecated !!! Destination type is deprecated and will be deleted in future. Optional field. Avoid to use it for new integrations. Get a value from IntegrationSettings",
                      "enum":
                        [
                          "OXI",
                          "TARS",
                          "HILTON",
                          "HTNG",
                          "TEST",
                          "APALEO",
                          "SIHOT",
                          "OHIP",
                          "CLOUDBEDS",
                          "PROFIT_ADJUSTMENT",
                          "MEWS",
                        ],
                    },
                  "requestStatus":
                    {
                      "type": "string",
                      "enum": ["NOT_STARTED", "IN_PROGRESS", "COMPLETED"],
                    },
                  "summary":
                    {
                      "$ref": "#/components/schemas/DecisionDeliveryRequestDtoSummary",
                    },
                },
            },
          "DecisionDeliveryRequestDtoSummary":
            {
              "required": ["failed", "pending", "sent", "success"],
              "type": "object",
              "properties":
                {
                  "pending": { "type": "integer", "format": "int32" },
                  "sent": { "type": "integer", "format": "int32" },
                  "success": { "type": "integer", "format": "int32" },
                  "failed": { "type": "integer", "format": "int32" },
                },
            },
          "VendorRateCodeMappingDto":
            {
              "type": "object",
              "properties":
                {
                  "vendorPropertyCode": { "type": "string" },
                  "rateCodeMapping":
                    {
                      "type": "object",
                      "additionalProperties":
                        { "type": "array", "items": { "type": "string" } },
                    },
                },
            },
          "VendorRoomClassMappingDto":
            {
              "type": "object",
              "properties":
                {
                  "vendorPropertyCode": { "type": "string" },
                  "roomClassMapping":
                    {
                      "type": "object",
                      "additionalProperties":
                        { "type": "array", "items": { "type": "string" } },
                    },
                },
            },
          "ResourceOfLastRoomValueDecision":
            {
              "type": "object",
              "properties":
                {
                  "occupancyDate": { "type": "string" },
                  "inventoryCode": { "type": "string" },
                  "lastRoomValue": { "type": "number" },
                  "ceilingValue": { "type": "number" },
                  "deltaValue": { "type": "number" },
                  "maxSolds": { "type": "number" },
                  "currencyCode": { "type": "string" },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                },
            },
          "SlicedResourcesOfLastRoomValueDecision":
            {
              "type": "object",
              "properties":
                {
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/ResourceOfLastRoomValueDecision",
                        },
                    },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                  "page": { "$ref": "#/components/schemas/SliceMetadata" },
                },
            },
          "LastRoomValueDecision":
            {
              "required":
                [
                  "ceilingValue",
                  "currencyCode",
                  "deltaValue",
                  "inventoryCode",
                  "lastRoomValue",
                  "maxSolds",
                  "occupancyDate",
                ],
              "type": "object",
              "properties":
                {
                  "occupancyDate":
                    {
                      "type": "string",
                      "description": "The occupancyDate for which last room value decision is sent - defined by full-dat RFC3339 (YYYY-MM-DD).",
                      "format": "date",
                    },
                  "inventoryCode":
                    {
                      "type": "string",
                      "description": "Inventory code for which last room value decision is sent",
                    },
                  "lastRoomValue":
                    {
                      "type": "number",
                      "description": "Last room value code that is associated to the rates in this decision.",
                    },
                  "ceilingValue":
                    { "type": "number", "description": "Ceiling value" },
                  "deltaValue":
                    { "type": "number", "description": "Delta value" },
                  "maxSolds":
                    { "type": "number", "description": "Maximum Sold" },
                  "currencyCode":
                    { "type": "string", "description": "Currency code" },
                },
            },
          "ResourceOfMinLosDecision":
            {
              "type": "object",
              "properties":
                {
                  "arrivalDate": { "type": "string", "format": "date" },
                  "rateCode": { "type": "string" },
                  "roomTypeCode": { "type": "string" },
                  "minimumLengthOfStay": { "type": "number" },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                },
            },
          "SlicedResourcesOfMinLosDecision":
            {
              "type": "object",
              "properties":
                {
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/ResourceOfMinLosDecision",
                        },
                    },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                  "page": { "$ref": "#/components/schemas/SliceMetadata" },
                },
            },
          "MinLosDecision":
            {
              "required": ["arrivalDate", "minimumLengthOfStay"],
              "type": "object",
              "properties":
                {
                  "arrivalDate":
                    {
                      "type": "string",
                      "description": "The arrivalDate for which minimum length of stay decision is sent RFC3339 (YYYY-MM-DD).",
                      "format": "date",
                    },
                  "rateCode":
                    {
                      "type": "string",
                      "description": "Rate code for which MinLos decision is sent",
                    },
                  "roomTypeCode":
                    {
                      "type": "string",
                      "description": "Room Type code for which MinLos decision is sent",
                    },
                  "minimumLengthOfStay":
                    {
                      "type": "number",
                      "description": "The minimal amount of days available for booking",
                    },
                },
            },
          "DayOfWeekAmount":
            {
              "type": "object",
              "properties":
                {
                  "sunday": { "type": "number" },
                  "monday": { "type": "number" },
                  "tuesday": { "type": "number" },
                  "wednesday": { "type": "number" },
                  "thursday": { "type": "number" },
                  "friday": { "type": "number" },
                  "saturday": { "type": "number" },
                },
            },
          "ProfitAdjustment":
            {
              "required":
                ["currencyCode", "endDate", "roomClass", "startDate", "type"],
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "description": "Type of Profit Adjustment",
                      "enum": ["Adjustments", "Replacement"],
                    },
                  "marketSegment":
                    {
                      "type": "string",
                      "description": "Market segment of Profit Adjustment",
                    },
                  "rateCode":
                    {
                      "type": "string",
                      "description": "Rate code of Profit Adjustment",
                    },
                  "roomClass":
                    {
                      "type": "string",
                      "description": "Room class of Profit Adjustment",
                    },
                  "dayOfWeekAmount":
                    { "$ref": "#/components/schemas/DayOfWeekAmount" },
                  "currencyCode":
                    {
                      "type": "string",
                      "description": "Currency code of Profit Adjustment",
                    },
                  "startDate":
                    {
                      "type": "string",
                      "description": "Start date of Profit Adjustment",
                      "format": "date",
                    },
                  "endDate":
                    {
                      "type": "string",
                      "description": "End date of Profit Adjustment",
                      "format": "date",
                    },
                },
            },
          "ResourceOfProfitAdjustment":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "enum": ["Adjustment", "Replacement"] },
                  "marketSegment": { "type": "string" },
                  "rateCode": { "type": "string" },
                  "roomClass": { "type": "string" },
                  "dayOfWeekAmount":
                    { "$ref": "#/components/schemas/DayOfWeekAmount" },
                  "currencyCode": { "type": "string" },
                  "startDate": { "type": "string", "format": "date" },
                  "endDate": { "type": "string", "format": "date" },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                },
            },
          "SlicedResourcesOfProfitAdjustment":
            {
              "type": "object",
              "properties":
                {
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/ResourceOfProfitAdjustment",
                        },
                    },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                  "page": { "$ref": "#/components/schemas/SliceMetadata" },
                },
            },
          "ResourceOfOverbookingDecision":
            {
              "type": "object",
              "properties":
                {
                  "occupancyDate": { "type": "string" },
                  "overbooking": { "type": "number" },
                  "authorizedCapacity": { "type": "number" },
                  "roomTypeCode": { "type": "string" },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                },
            },
          "SlicedResourcesOfOverbookingDecision":
            {
              "type": "object",
              "properties":
                {
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/ResourceOfOverbookingDecision",
                        },
                    },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                  "page": { "$ref": "#/components/schemas/SliceMetadata" },
                },
            },
          "OverbookingDecision":
            {
              "required":
                ["authorizedCapacity", "occupancyDate", "overbooking"],
              "type": "object",
              "properties":
                {
                  "occupancyDate":
                    {
                      "type": "string",
                      "description": "The occupancyDate for which overbooking decision is sent - defined by full-date RFC3339 (YYYY-MM-DD).",
                      "format": "date",
                    },
                  "overbooking":
                    {
                      "type": "number",
                      "description": "Amount of overbooked rooms",
                    },
                  "authorizedCapacity":
                    {
                      "type": "number",
                      "description": "Amount of authorized capacity",
                    },
                  "roomTypeCode":
                    {
                      "type": "string",
                      "description": "Room Type code for which overbooking decision is sent",
                    },
                  "splitRatio":
                    {
                      "type": "object",
                      "additionalProperties": { "type": "number" },
                    },
                },
            },
          "OpenCloseRestrictionDecisions":
            {
              "required": ["arrivalDate", "status"],
              "type": "object",
              "properties":
                {
                  "arrivalDate":
                    {
                      "type": "string",
                      "description": "arrivalDate of OpenCloseRestrictionDecisions",
                      "format": "date",
                    },
                  "status":
                    {
                      "type": "string",
                      "description": "status of OpenCloseRestrictionDecisions",
                      "enum": ["open", "close"],
                    },
                },
            },
          "ResourceOfOpenCloseRestrictionDecisions":
            {
              "type": "object",
              "properties":
                {
                  "clientCode":
                    {
                      "type": "string",
                      "description": "clientCode of OpenCloseRestrictionDecisions",
                    },
                  "propertyCode":
                    {
                      "type": "string",
                      "description": "propertyCode of OpenCloseRestrictionDecisions",
                    },
                  "correlationId":
                    {
                      "type": "string",
                      "description": "correlationId of OpenCloseRestrictionDecisions",
                    },
                  "arrivalDate":
                    {
                      "type": "string",
                      "description": "arrivalDate of OpenCloseRestrictionDecisions",
                      "format": "date",
                    },
                  "status":
                    {
                      "type": "string",
                      "description": "status of OpenCloseRestrictionDecisions",
                      "enum": ["open", "close"],
                    },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                },
            },
          "SlicedResourcesOfOpenCloseRestrictionDecisions":
            {
              "type": "object",
              "properties":
                {
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/ResourceOfOpenCloseRestrictionDecisions",
                        },
                    },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                  "page": { "$ref": "#/components/schemas/SliceMetadata" },
                },
            },
          "ResourceOfDailyBarDecision":
            {
              "type": "object",
              "properties":
                {
                  "occupancyDate": { "type": "string" },
                  "rateCode": { "type": "string" },
                  "roomTypeCode": { "type": "string" },
                  "singleRate": { "type": "number" },
                  "doubleRate": { "type": "number" },
                  "tripleRate": { "type": "number" },
                  "quadRate": { "type": "number" },
                  "quintRate": { "type": "number" },
                  "additionalAdultRate": { "type": "number" },
                  "additionalChildRate": { "type": "number" },
                  "childOneRate": { "type": "number" },
                  "childTwoRate": { "type": "number" },
                  "childThreeRate": { "type": "number" },
                  "childFourRate": { "type": "number" },
                  "childFiveRate": { "type": "number" },
                  "currencyCode": { "type": "string" },
                  "taxExcluded": { "type": "boolean" },
                  "childAgeBucketOneRate": { "type": "number" },
                  "childAgeBucketTwoRate": { "type": "number" },
                  "childAgeBucketThreeRate": { "type": "number" },
                  "childAgeBucketFourRate": { "type": "number" },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                },
            },
          "SlicedResourcesOfDailyBarDecision":
            {
              "type": "object",
              "properties":
                {
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/ResourceOfDailyBarDecision",
                        },
                    },
                  "links":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                  "page": { "$ref": "#/components/schemas/SliceMetadata" },
                },
            },
          "DailyBarDecision":
            {
              "required":
                [
                  "currencyCode",
                  "doubleRate",
                  "occupancyDate",
                  "rateCode",
                  "roomTypeCode",
                  "singleRate",
                  "taxExcluded",
                ],
              "type": "object",
              "properties":
                {
                  "occupancyDate":
                    {
                      "type": "string",
                      "description": "The occupancyDate for which daily bar decision is sent - defined by full-dat RFC3339 (YYYY-MM-DD).",
                      "format": "date",
                    },
                  "rateCode":
                    {
                      "type": "string",
                      "description": "Rate code for which daily bar decision is sent",
                    },
                  "currencyCode":
                    {
                      "type": "string",
                      "description": "-> Currency code that is associated to the rates in this decision.",
                    },
                  "roomTypeCode":
                    {
                      "type": "string",
                      "description": "Room Type code for which daily bar decision is sent",
                    },
                  "singleRate":
                    {
                      "type": "number",
                      "description": "Room rate for 1 person in room",
                    },
                  "doubleRate":
                    {
                      "type": "number",
                      "description": "Room rate for 2 persons in room",
                    },
                  "tripleRate":
                    {
                      "type": "number",
                      "description": "Room rate for 3 persons in room",
                    },
                  "quadRate":
                    {
                      "type": "number",
                      "description": "Room rate for 4 persons in room",
                    },
                  "quintRate":
                    {
                      "type": "number",
                      "description": "Room rate for 5 persons in room",
                    },
                  "additionalAdultRate":
                    { "type": "number", "description": "extra person charge" },
                  "additionalChildRate":
                    { "type": "number", "description": "extra child rate" },
                  "childOneRate":
                    {
                      "type": "number",
                      "description": "Age group 1 child rate",
                    },
                  "childTwoRate":
                    {
                      "type": "number",
                      "description": "Age group 2 child rate",
                    },
                  "childThreeRate":
                    {
                      "type": "number",
                      "description": "Age group 3 child rate",
                    },
                  "childFourRate":
                    {
                      "type": "number",
                      "description": "Age group 4 child rate",
                    },
                  "childFiveRate":
                    {
                      "type": "number",
                      "description": "Age group 5 child rate",
                    },
                  "childAgeBucketOneRate":
                    {
                      "type": "number",
                      "description": "parameter in the decisions defining rate value for the children of the first specified age range",
                    },
                  "childAgeBucketTwoRate":
                    {
                      "type": "number",
                      "description": "parameter in the decisions defining rate value for the children of the second specified age range",
                    },
                  "childAgeBucketThreeRate":
                    {
                      "type": "number",
                      "description": "parameter in the decisions defining rate value for the children of the third specified age range",
                    },
                  "childAgeBucketFourRate":
                    {
                      "type": "number",
                      "description": "parameter in the decisions defining rate value for the children of the fourth specified age range",
                    },
                  "taxExcluded":
                    { "type": "boolean", "description": "Tax excluded" },
                },
            },
          "VendorRoomTypeMappingDto":
            {
              "type": "object",
              "properties":
                {
                  "vendorPropertyCode": { "type": "string" },
                  "roomTypeMapping":
                    {
                      "type": "object",
                      "additionalProperties":
                        { "type": "array", "items": { "type": "string" } },
                    },
                },
            },
          "NucleusDailyBarDecision":
            {
              "required": ["clientCode", "propertyCode"],
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "correlationId": { "type": "string" },
                  "decisionType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "LAST_ROOM_VALUE",
                          "HOTEL_OVER_BOOKING",
                          "ROOM_TYPE_OVER_BOOKING",
                          "DAILY_BAR",
                          "AGILE_RATES",
                          "BAR_BY_LOS",
                          "MINLOS_BY_RATE_CODE",
                          "MINLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "MINLOS_BY_RATE_CATEGORY",
                          "MINLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HOTEL",
                          "BAR_FPLOS_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HIERARCHY",
                          "BAR_FPLOS_BY_HIERARCHY_BY_ROOM_CLASS",
                          "BAR_FPLOS_BY_RANK",
                          "FPLOS",
                          "FPLOS_BY_RATE_CODE",
                          "FPLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "FPLOS_BY_RATE_CATEGORY",
                          "FPLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "INVENTORY_LIMIT",
                        ],
                    },
                  "occupancyDate": { "type": "string", "format": "date" },
                  "rateCode": { "type": "string" },
                  "roomTypeCode": { "type": "string" },
                  "singleRate": { "type": "number" },
                  "doubleRate": { "type": "number" },
                  "tripleRate": { "type": "number" },
                  "quadRate": { "type": "number" },
                  "quintRate": { "type": "number" },
                  "childAgeBucketOneRate": { "type": "number" },
                  "childAgeBucketTwoRate": { "type": "number" },
                  "childAgeBucketThreeRate": { "type": "number" },
                  "childAgeBucketFourRate": { "type": "number" },
                  "additionalAdultRate": { "type": "number" },
                  "additionalChildRate": { "type": "number" },
                  "childOneRate": { "type": "number" },
                  "childTwoRate": { "type": "number" },
                  "childThreeRate": { "type": "number" },
                  "childFourRate": { "type": "number" },
                  "childFiveRate": { "type": "number" },
                  "currencyCode": { "type": "string" },
                  "taxExcluded": { "type": "boolean" },
                  "rateType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "amountoffrack",
                          "amountaddrack",
                          "percentoffrack",
                          "percentaddrack",
                          "rack",
                        ],
                    },
                },
            },
          "Pageable":
            {
              "type": "object",
              "properties":
                {
                  "sort": { "$ref": "#/components/schemas/Sort" },
                  "paged": { "type": "boolean" },
                  "unpaged": { "type": "boolean" },
                  "pageSize": { "type": "integer", "format": "int32" },
                  "pageNumber": { "type": "integer", "format": "int32" },
                  "offset": { "type": "integer", "format": "int64" },
                },
            },
          "Sort":
            {
              "type": "object",
              "properties":
                {
                  "unsorted": { "type": "boolean" },
                  "sorted": { "type": "boolean" },
                  "empty": { "type": "boolean" },
                },
            },
          "PagedResourcesAssemblerFPLOSDecision":
            {
              "type": "object",
              "properties":
                {
                  "forceFirstAndLastRels":
                    { "type": "boolean", "writeOnly": true },
                },
            },
          "PageMetadata":
            {
              "type": "object",
              "properties":
                {
                  "size":
                    {
                      "type": "integer",
                      "format": "int64",
                      "xml": { "attribute": true },
                    },
                  "totalElements":
                    {
                      "type": "integer",
                      "format": "int64",
                      "xml": { "attribute": true },
                    },
                  "totalPages":
                    {
                      "type": "integer",
                      "format": "int64",
                      "xml": { "attribute": true },
                    },
                  "number":
                    {
                      "type": "integer",
                      "format": "int64",
                      "xml": { "attribute": true },
                    },
                },
            },
          "PagedResources":
            {
              "type": "object",
              "properties":
                {
                  "links":
                    {
                      "type": "array",
                      "xml":
                        {
                          "name": "link",
                          "namespace": "http://www.w3.org/2005/Atom",
                        },
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                  "content":
                    {
                      "type": "array",
                      "xml": { "wrapped": true },
                      "items": { "type": "object" },
                    },
                  "page": { "$ref": "#/components/schemas/PageMetadata" },
                },
              "xml": { "name": "pagedEntities" },
            },
          "Resource":
            {
              "type": "object",
              "properties":
                {
                  "content": { "type": "object" },
                  "links":
                    {
                      "type": "array",
                      "xml":
                        {
                          "name": "link",
                          "namespace": "http://www.w3.org/2005/Atom",
                        },
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                },
            },
          "FPLOSDecision":
            {
              "required": ["arrivalDate", "clientCode", "propertyCode"],
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "correlationId": { "type": "string" },
                  "decisionType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "LAST_ROOM_VALUE",
                          "HOTEL_OVER_BOOKING",
                          "ROOM_TYPE_OVER_BOOKING",
                          "DAILY_BAR",
                          "AGILE_RATES",
                          "BAR_BY_LOS",
                          "MINLOS_BY_RATE_CODE",
                          "MINLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "MINLOS_BY_RATE_CATEGORY",
                          "MINLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HOTEL",
                          "BAR_FPLOS_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HIERARCHY",
                          "BAR_FPLOS_BY_HIERARCHY_BY_ROOM_CLASS",
                          "BAR_FPLOS_BY_RANK",
                          "FPLOS",
                          "FPLOS_BY_RATE_CODE",
                          "FPLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "FPLOS_BY_RATE_CATEGORY",
                          "FPLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "INVENTORY_LIMIT",
                        ],
                    },
                  "arrivalDate": { "type": "string", "format": "date" },
                  "roomTypeCode": { "type": "string" },
                  "rateCode": { "type": "string" },
                  "los1": { "type": "string" },
                  "los2": { "type": "string" },
                  "los3": { "type": "string" },
                  "los4": { "type": "string" },
                  "los5": { "type": "string" },
                  "los6": { "type": "string" },
                  "los7": { "type": "string" },
                },
            },
          "PagedResourcesAssemblerOverbookingDecision":
            {
              "type": "object",
              "properties":
                {
                  "forceFirstAndLastRels":
                    { "type": "boolean", "writeOnly": true },
                },
            },
          "InventoryLimitDecision":
            {
              "required": ["clientCode", "propertyCode"],
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "correlationId": { "type": "string" },
                  "occupancyDate": { "type": "string", "format": "date" },
                  "rateCode": { "type": "string" },
                  "inventoryLimit": { "type": "integer", "format": "int32" },
                },
            },
          "HotelOverbookingResourceAssembler": { "type": "object" },
          "DecisionDeliveryRequest":
            {
              "type": "object",
              "properties":
                {
                  "outboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "inboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "externalURL": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "clientEnvironmentName": { "type": "string" },
                  "clientEnvironmentId": { "type": "string" },
                  "jobName": { "type": "string" },
                  "correlationId": { "type": "string" },
                  "operaDecisionType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "LAST_ROOM_VALUE",
                          "HOTEL_OVER_BOOKING",
                          "ROOM_TYPE_OVER_BOOKING",
                          "DAILY_BAR",
                          "AGILE_RATES",
                          "BAR_BY_LOS",
                          "MINLOS_BY_RATE_CODE",
                          "MINLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "MINLOS_BY_RATE_CATEGORY",
                          "MINLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HOTEL",
                          "BAR_FPLOS_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HIERARCHY",
                          "BAR_FPLOS_BY_HIERARCHY_BY_ROOM_CLASS",
                          "BAR_FPLOS_BY_RANK",
                          "FPLOS",
                          "FPLOS_BY_RATE_CODE",
                          "FPLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "FPLOS_BY_RATE_CATEGORY",
                          "FPLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "INVENTORY_LIMIT",
                        ],
                    },
                  "nucleusDecisionType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "LAST_ROOM_VALUE",
                          "HOTEL_OVER_BOOKING",
                          "ROOM_TYPE_OVER_BOOKING",
                          "DAILY_BAR",
                          "AGILE_RATES",
                          "BAR_BY_LOS",
                          "MINLOS_BY_RATE_CODE",
                          "MINLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "MINLOS_BY_RATE_CATEGORY",
                          "MINLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HOTEL",
                          "BAR_FPLOS_BY_ROOM_TYPE",
                          "BAR_FPLOS_BY_HIERARCHY",
                          "BAR_FPLOS_BY_HIERARCHY_BY_ROOM_CLASS",
                          "BAR_FPLOS_BY_RANK",
                          "FPLOS",
                          "FPLOS_BY_RATE_CODE",
                          "FPLOS_BY_RATE_CODE_BY_ROOM_TYPE",
                          "FPLOS_BY_RATE_CATEGORY",
                          "FPLOS_BY_RATE_CATEGORY_BY_ROOM_TYPE",
                          "INVENTORY_LIMIT",
                        ],
                    },
                  "destinationType":
                    {
                      "type": "string",
                      "enum": ["OXI", "TARS", "HILTON", "TEST"],
                    },
                  "operaDestinationType":
                    {
                      "type": "string",
                      "enum": ["OXI", "TARS", "HILTON", "TEST"],
                    },
                  "optimizedDailyBarAgileRateUploadEnabled":
                    { "type": "boolean" },
                  "ngiFplosDecisionsChunkSize":
                    { "type": "integer", "format": "int32" },
                  "virtualPropertyCode": { "type": "string" },
                },
            },
          "VendorCredentials":
            {
              "type": "object",
              "properties":
                {
                  "username": { "type": "string" },
                  "password": { "type": "string" },
                  "authenticationToken": { "type": "string" },
                  "sendXApiKey": { "type": "string" },
                  "fullAccessMode": { "type": "boolean" },
                  "clientId": { "type": "string" },
                  "clientSecret": { "type": "string" },
                },
            },
          "DecisionDeliveryAggregatedStatus":
            {
              "type": "object",
              "properties":
                {
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "count": { "type": "integer", "format": "int32" },
                  "startDateTime": { "type": "string", "format": "date-time" },
                  "lastUpdateDate": { "type": "string", "format": "date-time" },
                  "nucleusDecisionType": { "type": "string" },
                  "status": { "type": "string" },
                  "correlationId": { "type": "string" },
                },
            },
          "ChannelDto":
            {
              "type": "object",
              "properties":
                {
                  "channelCode": { "type": "string" },
                  "id": { "type": "integer", "format": "int32" },
                  "unifiedId": { "type": "string", "format": "uuid" },
                },
            },
          "PropertyDto":
            {
              "type": "object",
              "properties":
                {
                  "address": { "type": "string" },
                  "chainCode": { "type": "string" },
                  "chainName": { "type": "string" },
                  "channels":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ChannelDto" },
                    },
                  "city": { "type": "string" },
                  "countryCode": { "type": "string" },
                  "createdBy": { "type": "string" },
                  "createdOn": { "type": "string", "format": "date-time" },
                  "g2ChainCode": { "type": "string" },
                  "g2HostUrl": { "type": "string" },
                  "g2PropertyCode": { "type": "string" },
                  "hotelCapacity": { "type": "integer", "format": "int32" },
                  "hotelOpenedDate": { "type": "string", "format": "date" },
                  "latitude": { "type": "number", "format": "double" },
                  "longitude": { "type": "number", "format": "double" },
                  "name": { "type": "string" },
                  "open": { "type": "boolean" },
                  "parentChainCode": { "type": "string" },
                  "parentChainName": { "type": "string" },
                  "pmsPropertyId": { "type": "string" },
                  "postalCode": { "type": "string" },
                  "starRating": { "type": "integer", "format": "int32" },
                  "state": { "type": "string" },
                  "timezone": { "type": "string" },
                  "unifiedId": { "type": "string", "format": "uuid" },
                  "updatedBy": { "type": "string" },
                  "updatedOn": { "type": "string", "format": "date-time" },
                  "vendorMappings":
                    {
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/VendorMappingDto" },
                    },
                },
            },
          "VendorMappingDto":
            {
              "type": "object",
              "properties":
                {
                  "id": { "type": "integer", "format": "int32" },
                  "unifiedId": { "type": "string", "format": "uuid" },
                  "vendor": { "type": "string" },
                  "vendorHotelId": { "type": "string" },
                },
            },
          "NucleusEventMessage":
            {
              "type": "object",
              "properties":
                {
                  "clientEnvironmentName": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "eventType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "GENERATE_DATAFEED_FILE",
                          "GENERATE_OPTIX_DATAFEED_FILE",
                          "GENERATE_GEMINI_DATAFEED_FILE",
                          "UPLOAD_TARS_DECISIONS",
                          "DATA_PULL",
                          "GET_EXTRACT",
                          "NOTIFY_DECISION_ACK_STATUS",
                          "UPLOAD_NSIGHT_REPORT",
                          "TRIGGER_EXTARCT_PROCESSING",
                          "GENERATE_DATAFEED_STREAM",
                          "PURGE_DEMAND360_DATA",
                        ],
                    },
                  "parameters":
                    {
                      "type": "object",
                      "additionalProperties": { "type": "object" },
                    },
                },
            },
          "GenericErrorRestEndpoint":
            {
              "type": "object",
              "properties":
                {
                  "httpMethod":
                    {
                      "type": "string",
                      "enum":
                        [
                          "GET",
                          "HEAD",
                          "POST",
                          "PUT",
                          "PATCH",
                          "DELETE",
                          "OPTIONS",
                          "TRACE",
                        ],
                    },
                  "url": { "type": "string" },
                  "mvcURL": { "type": "string" },
                },
            },
          "NucleusCompositeNotification":
            {
              "required":
                [
                  "clientCode",
                  "expirationDate",
                  "integrationType",
                  "notificationCount",
                  "propertyCode",
                  "status",
                  "targetNotification",
                ],
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "integrationType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "FUNCTION_SPACE_CLIENT",
                          "OXI_SC",
                          "UNQUALIFIED_RATES",
                          "QUALIFIED_RATES",
                          "STR_MONTHLY",
                          "STR_WEEKLY",
                          "ACTIVITY_DATA",
                          "ACTIVITY_DATA_CDP",
                          "OXI_PMS",
                          "DEMAND360_DATA_LOAD",
                          "FOLS",
                          "RRA",
                          "AHWS_SC",
                          "HTNG",
                          "HILTON",
                          "MARS",
                          "OPERA_SC",
                          "REVENUE_STREAMS",
                          "APALEO",
                          "SIHOT",
                          "UNKNOWN",
                          "SALES_AND_CATERING",
                          "OHIP",
                          "OHIP_SNC",
                          "IDEAS_RMS",
                          "IDEASFILE",
                          "CLOUDBEDS",
                          "MEWS",
                          "PROFIT_ADJUSTMENT",
                        ],
                    },
                  "restEndpoint":
                    { "$ref": "#/components/schemas/GenericErrorRestEndpoint" },
                  "destinationChannel": { "type": "string" },
                  "expirationDate": { "type": "string", "format": "date-time" },
                  "status":
                    {
                      "type": "string",
                      "enum": ["PENDING", "SENT", "FAILED", "CANCELLED"],
                    },
                  "finalStatusDate":
                    { "type": "string", "format": "date-time" },
                  "targetNotification": { "type": "object" },
                  "notificationCount": { "type": "integer", "format": "int32" },
                  "expired": { "type": "boolean" },
                  "pending": { "type": "boolean" },
                },
            },
          "PageNucleusCompositeNotification":
            {
              "type": "object",
              "properties":
                {
                  "totalPages": { "type": "integer", "format": "int32" },
                  "totalElements": { "type": "integer", "format": "int64" },
                  "first": { "type": "boolean" },
                  "sort": { "$ref": "#/components/schemas/Sort" },
                  "last": { "type": "boolean" },
                  "number": { "type": "integer", "format": "int32" },
                  "numberOfElements": { "type": "integer", "format": "int32" },
                  "pageable": { "$ref": "#/components/schemas/Pageable" },
                  "size": { "type": "integer", "format": "int32" },
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/NucleusCompositeNotification",
                        },
                    },
                  "empty": { "type": "boolean" },
                },
            },
          "SimpleObjectRestWrapperBoolean":
            {
              "type": "object",
              "properties": { "data": { "type": "boolean" } },
            },
          "SimpleObjectRestWrapperLong":
            {
              "type": "object",
              "properties":
                { "data": { "type": "integer", "format": "int64" } },
            },
          "NucleusCorrelationMetadata":
            {
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "sendingSystemPropertyId": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "name": { "type": "string" },
                  "captureDate": { "type": "string", "format": "date-time" },
                  "correlationStatus":
                    {
                      "type": "string",
                      "enum":
                        [
                          "IN_PROGRESS",
                          "SUCCESSFUL",
                          "FAILED",
                          "ABANDONED",
                          "DUPLICATE",
                        ],
                    },
                  "integrationType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "FUNCTION_SPACE_CLIENT",
                          "OXI_SC",
                          "UNQUALIFIED_RATES",
                          "QUALIFIED_RATES",
                          "STR_MONTHLY",
                          "STR_WEEKLY",
                          "ACTIVITY_DATA",
                          "ACTIVITY_DATA_CDP",
                          "OXI_PMS",
                          "DEMAND360_DATA_LOAD",
                          "FOLS",
                          "RRA",
                          "AHWS_SC",
                          "HTNG",
                          "HILTON",
                          "MARS",
                          "OPERA_SC",
                          "REVENUE_STREAMS",
                          "APALEO",
                          "SIHOT",
                          "UNKNOWN",
                          "SALES_AND_CATERING",
                          "OHIP",
                          "OHIP_SNC",
                          "IDEAS_RMS",
                          "IDEASFILE",
                          "CLOUDBEDS",
                          "MEWS",
                          "PROFIT_ADJUSTMENT",
                        ],
                    },
                  "businessModule":
                    {
                      "type": "string",
                      "enum":
                        [
                          "FUNCTION_SPACE",
                          "STR",
                          "DEMAND_360",
                          "RESERVATION",
                          "FOLS",
                          "RRA",
                          "REVENUE_STREAMS",
                        ],
                    },
                  "originalFilePath": { "type": "string" },
                  "currentFilePath": { "type": "string" },
                  "additionalInformation":
                    {
                      "type": "object",
                      "additionalProperties": { "type": "string" },
                    },
                  "originalFile": { "type": "string", "format": "binary" },
                  "propertyIdentifier":
                    { "$ref": "#/components/schemas/PropertyIdentifier" },
                  "currentFile": { "type": "string", "format": "binary" },
                },
            },
          "PropertyIdentifier":
            {
              "type": "object",
              "properties":
                {
                  "sendingSystemPropertyId": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                },
            },
          "PagedResourcesAssemblerNucleusCorrelationMetadata":
            {
              "type": "object",
              "properties":
                {
                  "forceFirstAndLastRels":
                    { "type": "boolean", "writeOnly": true },
                },
            },
          "PagedResourcesResourceNucleusCorrelationMetadata":
            {
              "type": "object",
              "properties":
                {
                  "links":
                    {
                      "type": "array",
                      "xml":
                        {
                          "name": "link",
                          "namespace": "http://www.w3.org/2005/Atom",
                        },
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                  "content":
                    {
                      "type": "array",
                      "xml": { "wrapped": true },
                      "items":
                        {
                          "$ref": "#/components/schemas/ResourceNucleusCorrelationMetadata",
                        },
                    },
                  "page": { "$ref": "#/components/schemas/PageMetadata" },
                },
              "xml": { "name": "pagedEntities" },
            },
          "ResourceNucleusCorrelationMetadata":
            {
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "sendingSystemPropertyId": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "name": { "type": "string" },
                  "captureDate": { "type": "string", "format": "date-time" },
                  "correlationStatus":
                    {
                      "type": "string",
                      "enum":
                        [
                          "IN_PROGRESS",
                          "SUCCESSFUL",
                          "FAILED",
                          "ABANDONED",
                          "DUPLICATE",
                        ],
                    },
                  "integrationType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "FUNCTION_SPACE_CLIENT",
                          "OXI_SC",
                          "UNQUALIFIED_RATES",
                          "QUALIFIED_RATES",
                          "STR_MONTHLY",
                          "STR_WEEKLY",
                          "ACTIVITY_DATA",
                          "ACTIVITY_DATA_CDP",
                          "OXI_PMS",
                          "DEMAND360_DATA_LOAD",
                          "FOLS",
                          "RRA",
                          "AHWS_SC",
                          "HTNG",
                          "HILTON",
                          "MARS",
                          "OPERA_SC",
                          "REVENUE_STREAMS",
                          "APALEO",
                          "SIHOT",
                          "UNKNOWN",
                          "SALES_AND_CATERING",
                          "OHIP",
                          "OHIP_SNC",
                          "IDEAS_RMS",
                          "IDEASFILE",
                          "CLOUDBEDS",
                          "MEWS",
                          "PROFIT_ADJUSTMENT",
                        ],
                    },
                  "businessModule":
                    {
                      "type": "string",
                      "enum":
                        [
                          "FUNCTION_SPACE",
                          "STR",
                          "DEMAND_360",
                          "RESERVATION",
                          "FOLS",
                          "RRA",
                          "REVENUE_STREAMS",
                        ],
                    },
                  "originalFilePath": { "type": "string" },
                  "currentFilePath": { "type": "string" },
                  "additionalInformation":
                    {
                      "type": "object",
                      "additionalProperties": { "type": "string" },
                    },
                  "originalFile": { "type": "string", "format": "binary" },
                  "propertyIdentifier":
                    { "$ref": "#/components/schemas/PropertyIdentifier" },
                  "currentFile": { "type": "string", "format": "binary" },
                  "links":
                    {
                      "type": "array",
                      "xml":
                        {
                          "name": "link",
                          "namespace": "http://www.w3.org/2005/Atom",
                        },
                      "items": { "$ref": "#/components/schemas/Link" },
                    },
                },
            },
          "MessageObject":
            {
              "type": "object",
              "properties":
                {
                  "headers":
                    {
                      "type": "object",
                      "properties":
                        {
                          "timestamp": { "type": "integer", "format": "int64" },
                          "errorChannel": { "type": "object" },
                          "replyChannel": { "type": "object" },
                          "empty": { "type": "boolean" },
                          "id": { "type": "string", "format": "uuid" },
                        },
                      "additionalProperties": { "type": "object" },
                    },
                  "payload": { "type": "object" },
                },
            },
          "MessageStats":
            {
              "type": "object",
              "properties":
                {
                  "publish": { "type": "integer", "format": "int64" },
                  "publish_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "confirm": { "type": "integer", "format": "int64" },
                  "confirm_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "return_unroutable": { "type": "integer", "format": "int64" },
                  "return_unroutable_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "deliver": { "type": "integer", "format": "int64" },
                  "deliver_get": { "type": "integer", "format": "int64" },
                  "deliver_get_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "deliver_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "deliver_no_ack": { "type": "integer", "format": "int64" },
                  "deliver_no_ack_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "redeliver": { "type": "integer", "format": "int64" },
                  "redeliver_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "get_no_ack": { "type": "integer", "format": "int64" },
                  "get_no_ack_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "ack": { "type": "integer", "format": "int64" },
                  "ack_details": { "$ref": "#/components/schemas/RateDetails" },
                  "get": { "type": "integer", "format": "int64" },
                  "get_details": { "$ref": "#/components/schemas/RateDetails" },
                },
            },
          "OwnerPidDetails":
            {
              "type": "object",
              "properties":
                {
                  "name": { "type": "string" },
                  "peerHost": { "type": "string" },
                  "peerPort": { "type": "integer", "format": "int32" },
                },
            },
          "QueueInfo":
            {
              "type": "object",
              "properties":
                {
                  "vhost": { "type": "string" },
                  "name": { "type": "string" },
                  "durable": { "type": "boolean" },
                  "exclusive": { "type": "boolean" },
                  "arguments":
                    {
                      "type": "object",
                      "additionalProperties": { "type": "object" },
                    },
                  "node": { "type": "string" },
                  "state": { "type": "string" },
                  "policy": { "type": "string" },
                  "consumerUtilisation":
                    { "type": "integer", "format": "int64" },
                  "auto_delete": { "type": "boolean" },
                  "exclusive_consumer_tag": { "type": "string" },
                  "idle_since": { "type": "string" },
                  "disk_reads": { "type": "integer", "format": "int64" },
                  "disk_writes": { "type": "integer", "format": "int64" },
                  "memory": { "type": "integer", "format": "int64" },
                  "message_bytes": { "type": "integer", "format": "int64" },
                  "message_bytes_persistent":
                    { "type": "integer", "format": "int64" },
                  "message_bytes_ram": { "type": "integer", "format": "int64" },
                  "message_bytes_ready":
                    { "type": "integer", "format": "int64" },
                  "message_bytes_unacknowledged":
                    { "type": "integer", "format": "int64" },
                  "messages": { "type": "integer", "format": "int64" },
                  "message_stats":
                    { "$ref": "#/components/schemas/MessageStats" },
                  "messages_persistent":
                    { "type": "integer", "format": "int64" },
                  "messages_ram": { "type": "integer", "format": "int64" },
                  "messages_ready": { "type": "integer", "format": "int64" },
                  "messages_ready_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "messages_unacknowledged":
                    { "type": "integer", "format": "int64" },
                  "messages_unacknowledged_details":
                    { "$ref": "#/components/schemas/RateDetails" },
                  "owner_pid_details":
                    { "$ref": "#/components/schemas/OwnerPidDetails" },
                  "consumers": { "type": "integer", "format": "int64" },
                },
            },
          "RateDetails":
            {
              "type": "object",
              "properties":
                { "rate": { "type": "number", "format": "double" } },
            },
          "IntegrationPropertyConfig":
            {
              "required":
                [
                  "clientCode",
                  "extendedAttributes",
                  "integrationType",
                  "priority",
                  "propertyCode",
                  "vendorId",
                ],
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "integrationType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "FUNCTION_SPACE_CLIENT",
                          "OXI_SC",
                          "UNQUALIFIED_RATES",
                          "QUALIFIED_RATES",
                          "STR_MONTHLY",
                          "STR_WEEKLY",
                          "ACTIVITY_DATA",
                          "ACTIVITY_DATA_CDP",
                          "OXI_PMS",
                          "DEMAND360_DATA_LOAD",
                          "FOLS",
                          "RRA",
                          "AHWS_SC",
                          "HTNG",
                          "HILTON",
                          "MARS",
                          "OPERA_SC",
                          "REVENUE_STREAMS",
                          "APALEO",
                          "SIHOT",
                          "UNKNOWN",
                          "SALES_AND_CATERING",
                          "OHIP",
                          "OHIP_SNC",
                          "IDEAS_RMS",
                          "IDEASFILE",
                          "CLOUDBEDS",
                          "MEWS",
                          "PROFIT_ADJUSTMENT",
                        ],
                    },
                  "vendorId": { "type": "string" },
                  "inboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "outboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "inboundDecisionCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "outboundDecisionCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "unqualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "qualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "installationReservationsThreshold":
                    { "type": "integer", "format": "int32" },
                  "oxiRoomStayReservationByDay": { "type": "boolean" },
                  "htngRoomStayReservationByDay": { "type": "boolean" },
                  "folsRoomStayReservationByDay": { "type": "boolean" },
                  "htngUseBasicAuth": { "type": "boolean" },
                  "ratePlanCleanupEnabled": { "type": "boolean" },
                  "includeRoomTypeHotelMarketSegmentActivity":
                    { "type": "boolean" },
                  "preventPseudoDataInActivity": { "type": "boolean" },
                  "isComponentRoomsActivityEnabled": { "type": "boolean" },
                  "useLegacyRoomStayHandling": { "type": "boolean" },
                  "oxiParkMessageTypes": { "type": "string" },
                  "generateMarketSegmentStatsEnabled": { "type": "boolean" },
                  "generateRateCodeStatsEnabled": { "type": "boolean" },
                  "resetVirtualSuiteCounts": { "type": "boolean" },
                  "generateHotelActivityFromRoomTypeActivity":
                    { "type": "boolean" },
                  "inboundVendor": { "type": "boolean" },
                  "allowBookingAndCancellationDateUpdates":
                    { "type": "boolean" },
                  "adjustIdpSoldsUsingSkewingFactor": { "type": "boolean" },
                  "salesAndCateringUnitOfMeasure": { "type": "string" },
                  "salesAndCateringStatus": { "type": "string" },
                  "searchAlternateMarketSegmentLocationforHtng":
                    { "type": "boolean" },
                  "staticLRV": { "type": "boolean" },
                  "summaryPersistenceEnabled": { "type": "boolean" },
                  "msrtSummaryPersistenceEnabled": { "type": "boolean" },
                  "populateInventoryDataForSummaryProperty":
                    { "type": "boolean" },
                  "allowZeroValuesInSummaryStats": { "type": "boolean" },
                  "buildMSActivityUsingPMSMS": { "type": "boolean" },
                  "inboundDataPullingIsRequired": { "type": "boolean" },
                  "outgoingUrl": { "type": "string" },
                  "outgoingLrvUrl": { "type": "string" },
                  "outgoingDailyBarUrl": { "type": "string" },
                  "outgoingOverbookingUrl": { "type": "string" },
                  "decisionDeliveryMonitorDelay":
                    { "type": "integer", "format": "int32" },
                  "usePastInventoryForStatsAlways": { "type": "boolean" },
                  "alternateHTNGGroupsFlow": { "type": "boolean" },
                  "defaultMarketSegmentCode": { "type": "string" },
                  "defaultGroupMarketSegmentCode": { "type": "string" },
                  "rateCodeGroupPrefix": { "type": "string" },
                  "ohipDefaultMissingRevenueToZero": { "type": "boolean" },
                  "ohipFutureCancelledRevenueToZero": { "type": "boolean" },
                  "combineOldMarketSegmentData": { "type": "boolean" },
                  "validGroupMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "validTransientMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "processSoftPickups": { "type": "boolean" },
                  "folsUseCloudProcessing": { "type": "boolean" },
                  "rraUseCloudProcessing": { "type": "boolean" },
                  "alternateHTNGNamespace": { "type": "boolean" },
                  "htngDecisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "reservationTypesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "reservationStatusesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "reservationRateCodesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "mergeGroupBlocksForHeaderOnlyCancel": { "type": "boolean" },
                  "mergeGroupBlocksRatesIfMissing": { "type": "boolean" },
                  "adjustReservationNetRates": { "type": "string" },
                  "ignoreRateDetails": { "type": "boolean" },
                  "runGroupAutoWash": { "type": "boolean" },
                  "handleDayUseToNonDayUseReservationConversion":
                    { "type": "boolean" },
                  "useNewMarketSegmentMappingLogic": { "type": "boolean" },
                  "decisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "performanceMonitorEnabled": { "type": "boolean" },
                  "pseudoRoomTypes":
                    { "type": "array", "items": { "type": "string" } },
                  "idpEnabled": { "type": "boolean" },
                  "populationChunkSize":
                    { "type": "integer", "format": "int32" },
                  "readChunkSize": { "type": "integer", "format": "int32" },
                  "nextTaskDelay": { "type": "integer", "format": "int32" },
                  "groupPastDays": { "type": "integer", "format": "int32" },
                  "activityDataPresendSanityCheckEnabled":
                    { "type": "boolean" },
                  "feedRequestDelay": { "type": "integer", "format": "int32" },
                  "version": { "type": "integer", "format": "int64" },
                  "baseCurrencyCode": { "type": "string" },
                  "isAgentThroughNgiEnabled": { "type": "boolean" },
                  "isEmulatorReplayPopulationEnabled": { "type": "boolean" },
                  "isOhipReplayPopulationEnabled": { "type": "boolean" },
                  "autoCancellationOfReservationsForAgentEnabled":
                    { "type": "boolean" },
                  "defaultRoomType": { "type": "string" },
                  "preprocessingRequired": { "type": "boolean" },
                  "handleRoomTypeChangesInShares": { "type": "boolean" },
                  "htngIgnoreRoomRatesWithoutRateCode": { "type": "boolean" },
                  "htngPricingDecisionsAmountAfterTax": { "type": "boolean" },
                  "bypassFilterOnPseudoRoomTypes": { "type": "boolean" },
                  "uploadAdultsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildrenRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildAgeBucketsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "decisionUploadChunkSize":
                    { "type": "integer", "format": "int32" },
                  "uploadExtraAdultRates": { "type": "boolean" },
                  "uploadExtraChildRates": { "type": "boolean" },
                  "useSihotShortReservationId": { "type": "boolean" },
                  "rebuildRoomTypeMarketSegmentSummary": { "type": "boolean" },
                  "discontinuedMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "excludeFromUnmappedGroupRateCodesRegexp":
                    { "type": "string" },
                  "useReservationIdForShares": { "type": "boolean" },
                  "yieldCurrency": { "type": "string" },
                  "excludeYieldCurrencyConversionForRateValue":
                    { "type": "boolean" },
                  "excludeYieldCurrencyConversionForRateValueForGroupData":
                    { "type": "boolean" },
                  "inventoryStalenessCheckEnabled": { "type": "boolean" },
                  "tokenUrl": { "type": "string" },
                  "mapRatePlanMarketCode": { "type": "boolean" },
                  "enableNucleusExchangeRates": { "type": "boolean" },
                  "disableMixedExchangeRates": { "type": "boolean" },
                  "checkVirtualSuitesComponentRooms": { "type": "boolean" },
                  "lrvCurrencyCode": { "type": "string" },
                  "dailyBarCurrencyCode": { "type": "string" },
                  "dailyBarRateCode": { "type": "string" },
                  "allowOverrideBookedRoomType": { "type": "boolean" },
                  "intermediateExchangeCurrency": { "type": "string" },
                  "failIncompleteInventory": { "type": "boolean" },
                  "cdpPastDays": { "type": "integer", "format": "int32" },
                  "cdpFutureDays": { "type": "integer", "format": "int32" },
                  "replaceZeroRevenueCheckoutWithRateValue":
                    { "type": "boolean" },
                  "ignoredReservationUpdateRateCodes":
                    { "type": "array", "items": { "type": "string" } },
                  "minReservationStayDate": { "type": "string" },
                  "minReservationStayDateEnabled": { "type": "boolean" },
                  "hiltonPreprocessingHonorsPastDays":
                    { "type": "integer", "format": "int32" },
                  "extendedStay": { "type": "boolean" },
                  "recalculateGroups": { "type": "boolean" },
                  "recalculateRatePlans": { "type": "boolean" },
                  "filterReservationsByExternalReferences":
                    { "type": "boolean" },
                  "rsvPastDays": { "type": "integer", "format": "int32" },
                  "ohipRoomTypesToInclude": { "type": "string" },
                  "ohipReservationStatusTypesToInclude": { "type": "string" },
                  "ohipStraightMarketSegmentsToInclude": { "type": "string" },
                  "excludeSemiyieldableRateAdjustments": { "type": "boolean" },
                  "useMaxRateValueForShares": { "type": "boolean" },
                  "pricingAndLrvRounding":
                    { "type": "integer", "format": "int32" },
                  "groupBlockPurgingBeyondPurgeDateEnabled":
                    { "type": "boolean" },
                  "trimMarketSegmentCode": { "type": "boolean" },
                  "doNotCorrelateInventoriesInIdp": { "type": "boolean" },
                  "outOfOrderRoomsCountAdjustmentEnabled":
                    { "type": "boolean" },
                  "postDepartureRevenueAdjustmentEnabled":
                    { "type": "boolean" },
                  "ohipEmulatorResortCodeValidationEnabled":
                    { "type": "boolean" },
                  "enableOhipReservationEntityV2": { "type": "boolean" },
                  "hiltonOutboundCloudEnabled": { "type": "boolean" },
                  "extendedAttributes":
                    {
                      "type": "object",
                      "additionalProperties": { "type": "object" },
                    },
                  "priority": { "type": "integer", "format": "int32" },
                  "propertyCode": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "oxiInterfaceName": { "type": "string" },
                  "taxAdjustmentValue": { "type": "number" },
                  "pastDays": { "type": "integer", "format": "int32" },
                  "futureDays": { "type": "integer", "format": "int32" },
                  "assumeTaxIncluded": { "type": "boolean" },
                  "assumePackageIncluded": { "type": "boolean" },
                  "installMode": { "type": "boolean" },
                  "scheduledDeferredDelivery": { "type": "boolean" },
                  "inCatchup": { "type": "boolean" },
                  "calculateNonPickedUpBlocksUsingSummaryData":
                    { "type": "boolean" },
                  "handlePreviouslyStraightMarketSegmentsInAms":
                    { "type": "boolean" },
                  "externalPropertyId": { "type": "string" },
                  "roomRevenuePackages": { "type": "string" },
                  "populatePackageDataEnabled": { "type": "boolean" },
                  "useNetRoomRevenue": { "type": "boolean" },
                  "includePseudoInRevenue": { "type": "boolean" },
                  "includeDayUseInRevenue": { "type": "boolean" },
                  "includeNoShowInRevenue": { "type": "boolean" },
                  "useCurrencyInMessage": { "type": "boolean" },
                  "clientEnvironmentName": { "type": "string" },
                  "inventoryLoadingCronScheduleInUTC": { "type": "string" },
                  "timeSliceDefinitionIds": { "type": "string" },
                  "cloudMigrationStatus": { "type": "string" },
                  "oxiUseCloudProcessing": { "type": "boolean" },
                  "htngUseCloudProcessing": { "type": "boolean" },
                  "sncUseCloudProcessing": { "type": "boolean" },
                  "operaResortCode": { "type": "string" },
                  "salesAndCateringRMSCurrencyCode": { "type": "string" },
                  "htngCallbackOnCloudDisabled": { "type": "boolean" },
                  "applyTaxAdjustments": { "type": "boolean" },
                  "virtualProperty": { "type": "boolean" },
                  "relatedVirtualProperty": { "type": "string" },
                  "relatedPhysicalPropertiesForVirtual":
                    { "type": "array", "items": { "type": "string" } },
                  "sncUseGmeUIUrlForOnDemandEvaluation": { "type": "boolean" },
                  "componentRoomsActivityEnabled": { "type": "boolean" },
                },
            },
          "BaseIntegrationConfig":
            {
              "required":
                [
                  "extendedAttributes",
                  "integrationType",
                  "priority",
                  "vendorId",
                ],
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "integrationType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "FUNCTION_SPACE_CLIENT",
                          "OXI_SC",
                          "UNQUALIFIED_RATES",
                          "QUALIFIED_RATES",
                          "STR_MONTHLY",
                          "STR_WEEKLY",
                          "ACTIVITY_DATA",
                          "ACTIVITY_DATA_CDP",
                          "OXI_PMS",
                          "DEMAND360_DATA_LOAD",
                          "FOLS",
                          "RRA",
                          "AHWS_SC",
                          "HTNG",
                          "HILTON",
                          "MARS",
                          "OPERA_SC",
                          "REVENUE_STREAMS",
                          "APALEO",
                          "SIHOT",
                          "UNKNOWN",
                          "SALES_AND_CATERING",
                          "OHIP",
                          "OHIP_SNC",
                          "IDEAS_RMS",
                          "IDEASFILE",
                          "CLOUDBEDS",
                          "MEWS",
                          "PROFIT_ADJUSTMENT",
                        ],
                    },
                  "vendorId": { "type": "string" },
                  "inboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "outboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "inboundDecisionCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "outboundDecisionCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "unqualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "qualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "installationReservationsThreshold":
                    { "type": "integer", "format": "int32" },
                  "oxiRoomStayReservationByDay": { "type": "boolean" },
                  "htngRoomStayReservationByDay": { "type": "boolean" },
                  "folsRoomStayReservationByDay": { "type": "boolean" },
                  "htngUseBasicAuth": { "type": "boolean" },
                  "ratePlanCleanupEnabled": { "type": "boolean" },
                  "includeRoomTypeHotelMarketSegmentActivity":
                    { "type": "boolean" },
                  "preventPseudoDataInActivity": { "type": "boolean" },
                  "isComponentRoomsActivityEnabled": { "type": "boolean" },
                  "useLegacyRoomStayHandling": { "type": "boolean" },
                  "oxiParkMessageTypes": { "type": "string" },
                  "generateMarketSegmentStatsEnabled": { "type": "boolean" },
                  "generateRateCodeStatsEnabled": { "type": "boolean" },
                  "resetVirtualSuiteCounts": { "type": "boolean" },
                  "generateHotelActivityFromRoomTypeActivity":
                    { "type": "boolean" },
                  "inboundVendor": { "type": "boolean" },
                  "allowBookingAndCancellationDateUpdates":
                    { "type": "boolean" },
                  "adjustIdpSoldsUsingSkewingFactor": { "type": "boolean" },
                  "salesAndCateringUnitOfMeasure": { "type": "string" },
                  "salesAndCateringStatus": { "type": "string" },
                  "searchAlternateMarketSegmentLocationforHtng":
                    { "type": "boolean" },
                  "staticLRV": { "type": "boolean" },
                  "summaryPersistenceEnabled": { "type": "boolean" },
                  "msrtSummaryPersistenceEnabled": { "type": "boolean" },
                  "populateInventoryDataForSummaryProperty":
                    { "type": "boolean" },
                  "allowZeroValuesInSummaryStats": { "type": "boolean" },
                  "buildMSActivityUsingPMSMS": { "type": "boolean" },
                  "inboundDataPullingIsRequired": { "type": "boolean" },
                  "outgoingUrl": { "type": "string" },
                  "outgoingLrvUrl": { "type": "string" },
                  "outgoingDailyBarUrl": { "type": "string" },
                  "outgoingOverbookingUrl": { "type": "string" },
                  "decisionDeliveryMonitorDelay":
                    { "type": "integer", "format": "int32" },
                  "usePastInventoryForStatsAlways": { "type": "boolean" },
                  "alternateHTNGGroupsFlow": { "type": "boolean" },
                  "defaultMarketSegmentCode": { "type": "string" },
                  "defaultGroupMarketSegmentCode": { "type": "string" },
                  "rateCodeGroupPrefix": { "type": "string" },
                  "ohipDefaultMissingRevenueToZero": { "type": "boolean" },
                  "ohipFutureCancelledRevenueToZero": { "type": "boolean" },
                  "combineOldMarketSegmentData": { "type": "boolean" },
                  "validGroupMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "validTransientMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "processSoftPickups": { "type": "boolean" },
                  "folsUseCloudProcessing": { "type": "boolean" },
                  "rraUseCloudProcessing": { "type": "boolean" },
                  "alternateHTNGNamespace": { "type": "boolean" },
                  "htngDecisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "reservationTypesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "reservationStatusesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "reservationRateCodesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "mergeGroupBlocksForHeaderOnlyCancel": { "type": "boolean" },
                  "mergeGroupBlocksRatesIfMissing": { "type": "boolean" },
                  "adjustReservationNetRates": { "type": "string" },
                  "ignoreRateDetails": { "type": "boolean" },
                  "runGroupAutoWash": { "type": "boolean" },
                  "handleDayUseToNonDayUseReservationConversion":
                    { "type": "boolean" },
                  "useNewMarketSegmentMappingLogic": { "type": "boolean" },
                  "decisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "performanceMonitorEnabled": { "type": "boolean" },
                  "pseudoRoomTypes":
                    { "type": "array", "items": { "type": "string" } },
                  "idpEnabled": { "type": "boolean" },
                  "populationChunkSize":
                    { "type": "integer", "format": "int32" },
                  "readChunkSize": { "type": "integer", "format": "int32" },
                  "nextTaskDelay": { "type": "integer", "format": "int32" },
                  "groupPastDays": { "type": "integer", "format": "int32" },
                  "activityDataPresendSanityCheckEnabled":
                    { "type": "boolean" },
                  "feedRequestDelay": { "type": "integer", "format": "int32" },
                  "version": { "type": "integer", "format": "int64" },
                  "baseCurrencyCode": { "type": "string" },
                  "isAgentThroughNgiEnabled": { "type": "boolean" },
                  "isEmulatorReplayPopulationEnabled": { "type": "boolean" },
                  "isOhipReplayPopulationEnabled": { "type": "boolean" },
                  "autoCancellationOfReservationsForAgentEnabled":
                    { "type": "boolean" },
                  "defaultRoomType": { "type": "string" },
                  "preprocessingRequired": { "type": "boolean" },
                  "handleRoomTypeChangesInShares": { "type": "boolean" },
                  "htngIgnoreRoomRatesWithoutRateCode": { "type": "boolean" },
                  "htngPricingDecisionsAmountAfterTax": { "type": "boolean" },
                  "bypassFilterOnPseudoRoomTypes": { "type": "boolean" },
                  "uploadAdultsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildrenRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildAgeBucketsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "decisionUploadChunkSize":
                    { "type": "integer", "format": "int32" },
                  "uploadExtraAdultRates": { "type": "boolean" },
                  "uploadExtraChildRates": { "type": "boolean" },
                  "useSihotShortReservationId": { "type": "boolean" },
                  "rebuildRoomTypeMarketSegmentSummary": { "type": "boolean" },
                  "discontinuedMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "excludeFromUnmappedGroupRateCodesRegexp":
                    { "type": "string" },
                  "useReservationIdForShares": { "type": "boolean" },
                  "yieldCurrency": { "type": "string" },
                  "excludeYieldCurrencyConversionForRateValue":
                    { "type": "boolean" },
                  "excludeYieldCurrencyConversionForRateValueForGroupData":
                    { "type": "boolean" },
                  "inventoryStalenessCheckEnabled": { "type": "boolean" },
                  "tokenUrl": { "type": "string" },
                  "mapRatePlanMarketCode": { "type": "boolean" },
                  "enableNucleusExchangeRates": { "type": "boolean" },
                  "disableMixedExchangeRates": { "type": "boolean" },
                  "checkVirtualSuitesComponentRooms": { "type": "boolean" },
                  "lrvCurrencyCode": { "type": "string" },
                  "dailyBarCurrencyCode": { "type": "string" },
                  "dailyBarRateCode": { "type": "string" },
                  "allowOverrideBookedRoomType": { "type": "boolean" },
                  "intermediateExchangeCurrency": { "type": "string" },
                  "failIncompleteInventory": { "type": "boolean" },
                  "cdpPastDays": { "type": "integer", "format": "int32" },
                  "cdpFutureDays": { "type": "integer", "format": "int32" },
                  "replaceZeroRevenueCheckoutWithRateValue":
                    { "type": "boolean" },
                  "ignoredReservationUpdateRateCodes":
                    { "type": "array", "items": { "type": "string" } },
                  "minReservationStayDate": { "type": "string" },
                  "minReservationStayDateEnabled": { "type": "boolean" },
                  "hiltonPreprocessingHonorsPastDays":
                    { "type": "integer", "format": "int32" },
                  "extendedStay": { "type": "boolean" },
                  "recalculateGroups": { "type": "boolean" },
                  "recalculateRatePlans": { "type": "boolean" },
                  "filterReservationsByExternalReferences":
                    { "type": "boolean" },
                  "rsvPastDays": { "type": "integer", "format": "int32" },
                  "ohipRoomTypesToInclude": { "type": "string" },
                  "ohipReservationStatusTypesToInclude": { "type": "string" },
                  "ohipStraightMarketSegmentsToInclude": { "type": "string" },
                  "excludeSemiyieldableRateAdjustments": { "type": "boolean" },
                  "useMaxRateValueForShares": { "type": "boolean" },
                  "pricingAndLrvRounding":
                    { "type": "integer", "format": "int32" },
                  "groupBlockPurgingBeyondPurgeDateEnabled":
                    { "type": "boolean" },
                  "trimMarketSegmentCode": { "type": "boolean" },
                  "doNotCorrelateInventoriesInIdp": { "type": "boolean" },
                  "outOfOrderRoomsCountAdjustmentEnabled":
                    { "type": "boolean" },
                  "postDepartureRevenueAdjustmentEnabled":
                    { "type": "boolean" },
                  "ohipEmulatorResortCodeValidationEnabled":
                    { "type": "boolean" },
                  "enableOhipReservationEntityV2": { "type": "boolean" },
                  "hiltonOutboundCloudEnabled": { "type": "boolean" },
                  "extendedAttributes":
                    {
                      "type": "object",
                      "additionalProperties": { "type": "object" },
                    },
                  "priority": { "type": "integer", "format": "int32" },
                  "componentRoomsActivityEnabled": { "type": "boolean" },
                },
            },
          "IntegrationVendorConfig":
            {
              "required":
                [
                  "extendedAttributes",
                  "integrationType",
                  "priority",
                  "vendorId",
                ],
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "integrationType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "FUNCTION_SPACE_CLIENT",
                          "OXI_SC",
                          "UNQUALIFIED_RATES",
                          "QUALIFIED_RATES",
                          "STR_MONTHLY",
                          "STR_WEEKLY",
                          "ACTIVITY_DATA",
                          "ACTIVITY_DATA_CDP",
                          "OXI_PMS",
                          "DEMAND360_DATA_LOAD",
                          "FOLS",
                          "RRA",
                          "AHWS_SC",
                          "HTNG",
                          "HILTON",
                          "MARS",
                          "OPERA_SC",
                          "REVENUE_STREAMS",
                          "APALEO",
                          "SIHOT",
                          "UNKNOWN",
                          "SALES_AND_CATERING",
                          "OHIP",
                          "OHIP_SNC",
                          "IDEAS_RMS",
                          "IDEASFILE",
                          "CLOUDBEDS",
                          "MEWS",
                          "PROFIT_ADJUSTMENT",
                        ],
                    },
                  "vendorId": { "type": "string" },
                  "inboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "outboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "inboundDecisionCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "outboundDecisionCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "unqualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "qualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "installationReservationsThreshold":
                    { "type": "integer", "format": "int32" },
                  "oxiRoomStayReservationByDay": { "type": "boolean" },
                  "htngRoomStayReservationByDay": { "type": "boolean" },
                  "folsRoomStayReservationByDay": { "type": "boolean" },
                  "htngUseBasicAuth": { "type": "boolean" },
                  "ratePlanCleanupEnabled": { "type": "boolean" },
                  "includeRoomTypeHotelMarketSegmentActivity":
                    { "type": "boolean" },
                  "preventPseudoDataInActivity": { "type": "boolean" },
                  "isComponentRoomsActivityEnabled": { "type": "boolean" },
                  "useLegacyRoomStayHandling": { "type": "boolean" },
                  "oxiParkMessageTypes": { "type": "string" },
                  "generateMarketSegmentStatsEnabled": { "type": "boolean" },
                  "generateRateCodeStatsEnabled": { "type": "boolean" },
                  "resetVirtualSuiteCounts": { "type": "boolean" },
                  "generateHotelActivityFromRoomTypeActivity":
                    { "type": "boolean" },
                  "inboundVendor": { "type": "boolean" },
                  "allowBookingAndCancellationDateUpdates":
                    { "type": "boolean" },
                  "adjustIdpSoldsUsingSkewingFactor": { "type": "boolean" },
                  "salesAndCateringUnitOfMeasure": { "type": "string" },
                  "salesAndCateringStatus": { "type": "string" },
                  "searchAlternateMarketSegmentLocationforHtng":
                    { "type": "boolean" },
                  "staticLRV": { "type": "boolean" },
                  "summaryPersistenceEnabled": { "type": "boolean" },
                  "msrtSummaryPersistenceEnabled": { "type": "boolean" },
                  "populateInventoryDataForSummaryProperty":
                    { "type": "boolean" },
                  "allowZeroValuesInSummaryStats": { "type": "boolean" },
                  "buildMSActivityUsingPMSMS": { "type": "boolean" },
                  "inboundDataPullingIsRequired": { "type": "boolean" },
                  "outgoingUrl": { "type": "string" },
                  "outgoingLrvUrl": { "type": "string" },
                  "outgoingDailyBarUrl": { "type": "string" },
                  "outgoingOverbookingUrl": { "type": "string" },
                  "decisionDeliveryMonitorDelay":
                    { "type": "integer", "format": "int32" },
                  "usePastInventoryForStatsAlways": { "type": "boolean" },
                  "alternateHTNGGroupsFlow": { "type": "boolean" },
                  "defaultMarketSegmentCode": { "type": "string" },
                  "defaultGroupMarketSegmentCode": { "type": "string" },
                  "rateCodeGroupPrefix": { "type": "string" },
                  "ohipDefaultMissingRevenueToZero": { "type": "boolean" },
                  "ohipFutureCancelledRevenueToZero": { "type": "boolean" },
                  "combineOldMarketSegmentData": { "type": "boolean" },
                  "validGroupMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "validTransientMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "processSoftPickups": { "type": "boolean" },
                  "folsUseCloudProcessing": { "type": "boolean" },
                  "rraUseCloudProcessing": { "type": "boolean" },
                  "alternateHTNGNamespace": { "type": "boolean" },
                  "htngDecisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "reservationTypesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "reservationStatusesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "reservationRateCodesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "mergeGroupBlocksForHeaderOnlyCancel": { "type": "boolean" },
                  "mergeGroupBlocksRatesIfMissing": { "type": "boolean" },
                  "adjustReservationNetRates": { "type": "string" },
                  "ignoreRateDetails": { "type": "boolean" },
                  "runGroupAutoWash": { "type": "boolean" },
                  "handleDayUseToNonDayUseReservationConversion":
                    { "type": "boolean" },
                  "useNewMarketSegmentMappingLogic": { "type": "boolean" },
                  "decisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "performanceMonitorEnabled": { "type": "boolean" },
                  "pseudoRoomTypes":
                    { "type": "array", "items": { "type": "string" } },
                  "idpEnabled": { "type": "boolean" },
                  "populationChunkSize":
                    { "type": "integer", "format": "int32" },
                  "readChunkSize": { "type": "integer", "format": "int32" },
                  "nextTaskDelay": { "type": "integer", "format": "int32" },
                  "groupPastDays": { "type": "integer", "format": "int32" },
                  "activityDataPresendSanityCheckEnabled":
                    { "type": "boolean" },
                  "feedRequestDelay": { "type": "integer", "format": "int32" },
                  "version": { "type": "integer", "format": "int64" },
                  "baseCurrencyCode": { "type": "string" },
                  "isAgentThroughNgiEnabled": { "type": "boolean" },
                  "isEmulatorReplayPopulationEnabled": { "type": "boolean" },
                  "isOhipReplayPopulationEnabled": { "type": "boolean" },
                  "autoCancellationOfReservationsForAgentEnabled":
                    { "type": "boolean" },
                  "defaultRoomType": { "type": "string" },
                  "preprocessingRequired": { "type": "boolean" },
                  "handleRoomTypeChangesInShares": { "type": "boolean" },
                  "htngIgnoreRoomRatesWithoutRateCode": { "type": "boolean" },
                  "htngPricingDecisionsAmountAfterTax": { "type": "boolean" },
                  "bypassFilterOnPseudoRoomTypes": { "type": "boolean" },
                  "uploadAdultsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildrenRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildAgeBucketsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "decisionUploadChunkSize":
                    { "type": "integer", "format": "int32" },
                  "uploadExtraAdultRates": { "type": "boolean" },
                  "uploadExtraChildRates": { "type": "boolean" },
                  "useSihotShortReservationId": { "type": "boolean" },
                  "rebuildRoomTypeMarketSegmentSummary": { "type": "boolean" },
                  "discontinuedMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "excludeFromUnmappedGroupRateCodesRegexp":
                    { "type": "string" },
                  "useReservationIdForShares": { "type": "boolean" },
                  "yieldCurrency": { "type": "string" },
                  "excludeYieldCurrencyConversionForRateValue":
                    { "type": "boolean" },
                  "excludeYieldCurrencyConversionForRateValueForGroupData":
                    { "type": "boolean" },
                  "inventoryStalenessCheckEnabled": { "type": "boolean" },
                  "tokenUrl": { "type": "string" },
                  "mapRatePlanMarketCode": { "type": "boolean" },
                  "enableNucleusExchangeRates": { "type": "boolean" },
                  "disableMixedExchangeRates": { "type": "boolean" },
                  "checkVirtualSuitesComponentRooms": { "type": "boolean" },
                  "lrvCurrencyCode": { "type": "string" },
                  "dailyBarCurrencyCode": { "type": "string" },
                  "dailyBarRateCode": { "type": "string" },
                  "allowOverrideBookedRoomType": { "type": "boolean" },
                  "intermediateExchangeCurrency": { "type": "string" },
                  "failIncompleteInventory": { "type": "boolean" },
                  "cdpPastDays": { "type": "integer", "format": "int32" },
                  "cdpFutureDays": { "type": "integer", "format": "int32" },
                  "replaceZeroRevenueCheckoutWithRateValue":
                    { "type": "boolean" },
                  "ignoredReservationUpdateRateCodes":
                    { "type": "array", "items": { "type": "string" } },
                  "minReservationStayDate": { "type": "string" },
                  "minReservationStayDateEnabled": { "type": "boolean" },
                  "hiltonPreprocessingHonorsPastDays":
                    { "type": "integer", "format": "int32" },
                  "extendedStay": { "type": "boolean" },
                  "recalculateGroups": { "type": "boolean" },
                  "recalculateRatePlans": { "type": "boolean" },
                  "filterReservationsByExternalReferences":
                    { "type": "boolean" },
                  "rsvPastDays": { "type": "integer", "format": "int32" },
                  "ohipRoomTypesToInclude": { "type": "string" },
                  "ohipReservationStatusTypesToInclude": { "type": "string" },
                  "ohipStraightMarketSegmentsToInclude": { "type": "string" },
                  "excludeSemiyieldableRateAdjustments": { "type": "boolean" },
                  "useMaxRateValueForShares": { "type": "boolean" },
                  "pricingAndLrvRounding":
                    { "type": "integer", "format": "int32" },
                  "groupBlockPurgingBeyondPurgeDateEnabled":
                    { "type": "boolean" },
                  "trimMarketSegmentCode": { "type": "boolean" },
                  "doNotCorrelateInventoriesInIdp": { "type": "boolean" },
                  "outOfOrderRoomsCountAdjustmentEnabled":
                    { "type": "boolean" },
                  "postDepartureRevenueAdjustmentEnabled":
                    { "type": "boolean" },
                  "ohipEmulatorResortCodeValidationEnabled":
                    { "type": "boolean" },
                  "enableOhipReservationEntityV2": { "type": "boolean" },
                  "hiltonOutboundCloudEnabled": { "type": "boolean" },
                  "extendedAttributes":
                    {
                      "type": "object",
                      "additionalProperties": { "type": "object" },
                    },
                  "priority": { "type": "integer", "format": "int32" },
                  "customReplyToAddress": { "type": "string" },
                  "useCustomSoapAction": { "type": "boolean" },
                  "cancelMultiUnitDecrements": { "type": "boolean" },
                  "dedicatedValidationResponseChannel": { "type": "boolean" },
                  "sendHTNGCallbackRequest": { "type": "boolean" },
                  "htngAvailRQCustomAction": { "type": "string" },
                  "htngInvBlockRSCustomAction": { "type": "string" },
                  "htngInvCountRSCustomAction": { "type": "string" },
                  "htngRatePlanRQCustomAction": { "type": "string" },
                  "htngRatePlanRSCustomAction": { "type": "string" },
                  "htngStatsRSCustomAction": { "type": "string" },
                  "htngResRSCustomAction": { "type": "string" },
                  "componentRoomsActivityEnabled": { "type": "boolean" },
                },
            },
          "PageIntegrationVendorConfig":
            {
              "type": "object",
              "properties":
                {
                  "totalPages": { "type": "integer", "format": "int32" },
                  "totalElements": { "type": "integer", "format": "int64" },
                  "first": { "type": "boolean" },
                  "sort": { "$ref": "#/components/schemas/Sort" },
                  "last": { "type": "boolean" },
                  "number": { "type": "integer", "format": "int32" },
                  "numberOfElements": { "type": "integer", "format": "int32" },
                  "pageable": { "$ref": "#/components/schemas/Pageable" },
                  "size": { "type": "integer", "format": "int32" },
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/IntegrationVendorConfig",
                        },
                    },
                  "empty": { "type": "boolean" },
                },
            },
          "IntegrationClientConfig":
            {
              "required":
                [
                  "clientCode",
                  "extendedAttributes",
                  "integrationType",
                  "priority",
                  "vendorId",
                ],
              "type": "object",
              "properties":
                {
                  "createDate": { "type": "string", "format": "date-time" },
                  "lastModifiedDate":
                    { "type": "string", "format": "date-time" },
                  "id": { "type": "string" },
                  "integrationType":
                    {
                      "type": "string",
                      "enum":
                        [
                          "FUNCTION_SPACE_CLIENT",
                          "OXI_SC",
                          "UNQUALIFIED_RATES",
                          "QUALIFIED_RATES",
                          "STR_MONTHLY",
                          "STR_WEEKLY",
                          "ACTIVITY_DATA",
                          "ACTIVITY_DATA_CDP",
                          "OXI_PMS",
                          "DEMAND360_DATA_LOAD",
                          "FOLS",
                          "RRA",
                          "AHWS_SC",
                          "HTNG",
                          "HILTON",
                          "MARS",
                          "OPERA_SC",
                          "REVENUE_STREAMS",
                          "APALEO",
                          "SIHOT",
                          "UNKNOWN",
                          "SALES_AND_CATERING",
                          "OHIP",
                          "OHIP_SNC",
                          "IDEAS_RMS",
                          "IDEASFILE",
                          "CLOUDBEDS",
                          "MEWS",
                          "PROFIT_ADJUSTMENT",
                        ],
                    },
                  "vendorId": { "type": "string" },
                  "inboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "outboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "inboundDecisionCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "outboundDecisionCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "unqualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "qualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "installationReservationsThreshold":
                    { "type": "integer", "format": "int32" },
                  "oxiRoomStayReservationByDay": { "type": "boolean" },
                  "htngRoomStayReservationByDay": { "type": "boolean" },
                  "folsRoomStayReservationByDay": { "type": "boolean" },
                  "htngUseBasicAuth": { "type": "boolean" },
                  "ratePlanCleanupEnabled": { "type": "boolean" },
                  "includeRoomTypeHotelMarketSegmentActivity":
                    { "type": "boolean" },
                  "preventPseudoDataInActivity": { "type": "boolean" },
                  "isComponentRoomsActivityEnabled": { "type": "boolean" },
                  "useLegacyRoomStayHandling": { "type": "boolean" },
                  "oxiParkMessageTypes": { "type": "string" },
                  "generateMarketSegmentStatsEnabled": { "type": "boolean" },
                  "generateRateCodeStatsEnabled": { "type": "boolean" },
                  "resetVirtualSuiteCounts": { "type": "boolean" },
                  "generateHotelActivityFromRoomTypeActivity":
                    { "type": "boolean" },
                  "inboundVendor": { "type": "boolean" },
                  "allowBookingAndCancellationDateUpdates":
                    { "type": "boolean" },
                  "adjustIdpSoldsUsingSkewingFactor": { "type": "boolean" },
                  "salesAndCateringUnitOfMeasure": { "type": "string" },
                  "salesAndCateringStatus": { "type": "string" },
                  "searchAlternateMarketSegmentLocationforHtng":
                    { "type": "boolean" },
                  "staticLRV": { "type": "boolean" },
                  "summaryPersistenceEnabled": { "type": "boolean" },
                  "msrtSummaryPersistenceEnabled": { "type": "boolean" },
                  "populateInventoryDataForSummaryProperty":
                    { "type": "boolean" },
                  "allowZeroValuesInSummaryStats": { "type": "boolean" },
                  "buildMSActivityUsingPMSMS": { "type": "boolean" },
                  "inboundDataPullingIsRequired": { "type": "boolean" },
                  "outgoingUrl": { "type": "string" },
                  "outgoingLrvUrl": { "type": "string" },
                  "outgoingDailyBarUrl": { "type": "string" },
                  "outgoingOverbookingUrl": { "type": "string" },
                  "decisionDeliveryMonitorDelay":
                    { "type": "integer", "format": "int32" },
                  "usePastInventoryForStatsAlways": { "type": "boolean" },
                  "alternateHTNGGroupsFlow": { "type": "boolean" },
                  "defaultMarketSegmentCode": { "type": "string" },
                  "defaultGroupMarketSegmentCode": { "type": "string" },
                  "rateCodeGroupPrefix": { "type": "string" },
                  "ohipDefaultMissingRevenueToZero": { "type": "boolean" },
                  "ohipFutureCancelledRevenueToZero": { "type": "boolean" },
                  "combineOldMarketSegmentData": { "type": "boolean" },
                  "validGroupMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "validTransientMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "processSoftPickups": { "type": "boolean" },
                  "folsUseCloudProcessing": { "type": "boolean" },
                  "rraUseCloudProcessing": { "type": "boolean" },
                  "alternateHTNGNamespace": { "type": "boolean" },
                  "htngDecisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "reservationTypesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "reservationStatusesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "reservationRateCodesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "mergeGroupBlocksForHeaderOnlyCancel": { "type": "boolean" },
                  "mergeGroupBlocksRatesIfMissing": { "type": "boolean" },
                  "adjustReservationNetRates": { "type": "string" },
                  "ignoreRateDetails": { "type": "boolean" },
                  "runGroupAutoWash": { "type": "boolean" },
                  "handleDayUseToNonDayUseReservationConversion":
                    { "type": "boolean" },
                  "useNewMarketSegmentMappingLogic": { "type": "boolean" },
                  "decisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "performanceMonitorEnabled": { "type": "boolean" },
                  "pseudoRoomTypes":
                    { "type": "array", "items": { "type": "string" } },
                  "idpEnabled": { "type": "boolean" },
                  "populationChunkSize":
                    { "type": "integer", "format": "int32" },
                  "readChunkSize": { "type": "integer", "format": "int32" },
                  "nextTaskDelay": { "type": "integer", "format": "int32" },
                  "groupPastDays": { "type": "integer", "format": "int32" },
                  "activityDataPresendSanityCheckEnabled":
                    { "type": "boolean" },
                  "feedRequestDelay": { "type": "integer", "format": "int32" },
                  "version": { "type": "integer", "format": "int64" },
                  "baseCurrencyCode": { "type": "string" },
                  "isAgentThroughNgiEnabled": { "type": "boolean" },
                  "isEmulatorReplayPopulationEnabled": { "type": "boolean" },
                  "isOhipReplayPopulationEnabled": { "type": "boolean" },
                  "autoCancellationOfReservationsForAgentEnabled":
                    { "type": "boolean" },
                  "defaultRoomType": { "type": "string" },
                  "preprocessingRequired": { "type": "boolean" },
                  "handleRoomTypeChangesInShares": { "type": "boolean" },
                  "htngIgnoreRoomRatesWithoutRateCode": { "type": "boolean" },
                  "htngPricingDecisionsAmountAfterTax": { "type": "boolean" },
                  "bypassFilterOnPseudoRoomTypes": { "type": "boolean" },
                  "uploadAdultsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildrenRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildAgeBucketsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "decisionUploadChunkSize":
                    { "type": "integer", "format": "int32" },
                  "uploadExtraAdultRates": { "type": "boolean" },
                  "uploadExtraChildRates": { "type": "boolean" },
                  "useSihotShortReservationId": { "type": "boolean" },
                  "rebuildRoomTypeMarketSegmentSummary": { "type": "boolean" },
                  "discontinuedMarketSegments":
                    { "type": "array", "items": { "type": "string" } },
                  "excludeFromUnmappedGroupRateCodesRegexp":
                    { "type": "string" },
                  "useReservationIdForShares": { "type": "boolean" },
                  "yieldCurrency": { "type": "string" },
                  "excludeYieldCurrencyConversionForRateValue":
                    { "type": "boolean" },
                  "excludeYieldCurrencyConversionForRateValueForGroupData":
                    { "type": "boolean" },
                  "inventoryStalenessCheckEnabled": { "type": "boolean" },
                  "tokenUrl": { "type": "string" },
                  "mapRatePlanMarketCode": { "type": "boolean" },
                  "enableNucleusExchangeRates": { "type": "boolean" },
                  "disableMixedExchangeRates": { "type": "boolean" },
                  "checkVirtualSuitesComponentRooms": { "type": "boolean" },
                  "lrvCurrencyCode": { "type": "string" },
                  "dailyBarCurrencyCode": { "type": "string" },
                  "dailyBarRateCode": { "type": "string" },
                  "allowOverrideBookedRoomType": { "type": "boolean" },
                  "intermediateExchangeCurrency": { "type": "string" },
                  "failIncompleteInventory": { "type": "boolean" },
                  "cdpPastDays": { "type": "integer", "format": "int32" },
                  "cdpFutureDays": { "type": "integer", "format": "int32" },
                  "replaceZeroRevenueCheckoutWithRateValue":
                    { "type": "boolean" },
                  "ignoredReservationUpdateRateCodes":
                    { "type": "array", "items": { "type": "string" } },
                  "minReservationStayDate": { "type": "string" },
                  "minReservationStayDateEnabled": { "type": "boolean" },
                  "hiltonPreprocessingHonorsPastDays":
                    { "type": "integer", "format": "int32" },
                  "extendedStay": { "type": "boolean" },
                  "recalculateGroups": { "type": "boolean" },
                  "recalculateRatePlans": { "type": "boolean" },
                  "filterReservationsByExternalReferences":
                    { "type": "boolean" },
                  "rsvPastDays": { "type": "integer", "format": "int32" },
                  "ohipRoomTypesToInclude": { "type": "string" },
                  "ohipReservationStatusTypesToInclude": { "type": "string" },
                  "ohipStraightMarketSegmentsToInclude": { "type": "string" },
                  "excludeSemiyieldableRateAdjustments": { "type": "boolean" },
                  "useMaxRateValueForShares": { "type": "boolean" },
                  "pricingAndLrvRounding":
                    { "type": "integer", "format": "int32" },
                  "groupBlockPurgingBeyondPurgeDateEnabled":
                    { "type": "boolean" },
                  "trimMarketSegmentCode": { "type": "boolean" },
                  "doNotCorrelateInventoriesInIdp": { "type": "boolean" },
                  "outOfOrderRoomsCountAdjustmentEnabled":
                    { "type": "boolean" },
                  "postDepartureRevenueAdjustmentEnabled":
                    { "type": "boolean" },
                  "ohipEmulatorResortCodeValidationEnabled":
                    { "type": "boolean" },
                  "enableOhipReservationEntityV2": { "type": "boolean" },
                  "hiltonOutboundCloudEnabled": { "type": "boolean" },
                  "extendedAttributes":
                    {
                      "type": "object",
                      "additionalProperties": { "type": "object" },
                    },
                  "priority": { "type": "integer", "format": "int32" },
                  "clientCode": { "type": "string" },
                  "clientEnvironmentName": { "type": "string" },
                  "populatePackageDataEnabled": { "type": "boolean" },
                  "useNetRoomRevenue": { "type": "boolean" },
                  "includePseudoInRevenue": { "type": "boolean" },
                  "includeDayUseInRevenue": { "type": "boolean" },
                  "includeNoShowInRevenue": { "type": "boolean" },
                  "sendHTNGCallbackRequest": { "type": "boolean" },
                  "useCurrencyInMessage": { "type": "boolean" },
                  "baseUrl": { "type": "string" },
                  "clientId": { "type": "string" },
                  "clientSecret": { "type": "string" },
                  "env": { "type": "string" },
                  "rateRecommendationTopic": { "type": "string" },
                  "continuousPricingTopic": { "type": "string" },
                  "webhookToken": { "type": "string" },
                  "cloudMigrationStatus": { "type": "string" },
                  "oxiUseCloudProcessing": { "type": "boolean" },
                  "htngUseCloudProcessing": { "type": "boolean" },
                  "salesAndCateringRMSCurrencyCode": { "type": "string" },
                  "htngCallbackOnCloudDisabled": { "type": "boolean" },
                  "sncUseCloudProcessing": { "type": "boolean" },
                  "sncUseGmeUIUrlForOnDemandEvaluation": { "type": "boolean" },
                  "componentRoomsActivityEnabled": { "type": "boolean" },
                },
            },
          "PageIntegrationClientConfig":
            {
              "type": "object",
              "properties":
                {
                  "totalPages": { "type": "integer", "format": "int32" },
                  "totalElements": { "type": "integer", "format": "int64" },
                  "first": { "type": "boolean" },
                  "sort": { "$ref": "#/components/schemas/Sort" },
                  "last": { "type": "boolean" },
                  "number": { "type": "integer", "format": "int32" },
                  "numberOfElements": { "type": "integer", "format": "int32" },
                  "pageable": { "$ref": "#/components/schemas/Pageable" },
                  "size": { "type": "integer", "format": "int32" },
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/IntegrationClientConfig",
                        },
                    },
                  "empty": { "type": "boolean" },
                },
            },
          "PageIntegrationPropertyConfig":
            {
              "type": "object",
              "properties":
                {
                  "totalPages": { "type": "integer", "format": "int32" },
                  "totalElements": { "type": "integer", "format": "int64" },
                  "first": { "type": "boolean" },
                  "sort": { "$ref": "#/components/schemas/Sort" },
                  "last": { "type": "boolean" },
                  "number": { "type": "integer", "format": "int32" },
                  "numberOfElements": { "type": "integer", "format": "int32" },
                  "pageable": { "$ref": "#/components/schemas/Pageable" },
                  "size": { "type": "integer", "format": "int32" },
                  "content":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/IntegrationPropertyConfig",
                        },
                    },
                  "empty": { "type": "boolean" },
                },
            },
          "QualifiedSetting":
            {
              "type": "object",
              "properties":
                {
                  "vendorId": { "type": "string" },
                  "clientCode": { "type": "string" },
                  "propertyCode": { "type": "string" },
                  "attribute": { "type": "string" },
                  "value": { "type": "object" },
                },
            },
          "SimpleObjectRestWrapperString":
            {
              "type": "object",
              "properties": { "data": { "type": "string" } },
            },
          "HotelConfigParams":
            {
              "type": "object",
              "properties":
                {
                  "hotelCode": { "type": "string" },
                  "g3HotelCode": { "type": "string" },
                  "g2HotelCode": { "type": "string" },
                  "inboundHotelCode": { "type": "string" },
                  "propertyName": { "type": "string" },
                  "oxiInterfaceName": { "type": "string" },
                  "taxAdjustmentValue": { "type": "number" },
                  "outboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "inboundCredentials":
                    { "$ref": "#/components/schemas/VendorCredentials" },
                  "baseCurrencyCode": { "type": "string" },
                  "pastDays": { "type": "integer", "format": "int32" },
                  "futureDays": { "type": "integer", "format": "int32" },
                  "assumeTaxIncluded": { "type": "boolean" },
                  "assumePackageIncluded": { "type": "boolean" },
                  "installMode": { "type": "boolean" },
                  "scheduledDeferredDelivery": { "type": "boolean" },
                  "inCatchup": { "type": "boolean" },
                  "calculateNonPickedUpBlocksUsingSummaryData":
                    { "type": "boolean" },
                  "handlePreviouslyStraightMarketSegmentsInAms":
                    { "type": "boolean" },
                  "unqualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "qualifiedRatesDirectPopulationDisabled":
                    { "type": "boolean" },
                  "roomRevenuePackages": { "type": "string" },
                  "installationReservationsThreshold":
                    { "type": "integer", "format": "int32" },
                  "populatePackageDataEnabled": { "type": "boolean" },
                  "oxiRoomStayReservationByDay": { "type": "boolean" },
                  "htngRoomStayReservationByDay": { "type": "boolean" },
                  "folsRoomStayReservationByDay": { "type": "boolean" },
                  "useNetRoomRevenue": { "type": "boolean" },
                  "htngUseBasicAuth": { "type": "boolean" },
                  "includePseudoInRevenue": { "type": "boolean" },
                  "includeDayUseInRevenue": { "type": "boolean" },
                  "includeNoShowInRevenue": { "type": "boolean" },
                  "defaultRoomType": { "type": "string" },
                  "ratePlanCleanupEnabled": { "type": "boolean" },
                  "includeRoomTypeHotelMarketSegmentActivity":
                    { "type": "boolean" },
                  "preventPseudoDataInActivity": { "type": "boolean" },
                  "useCurrencyInMessage": { "type": "boolean" },
                  "useLegacyRoomStayHandling": { "type": "boolean" },
                  "oxiParkMessageTypes": { "type": "string" },
                  "generateMarketSegmentStatsEnabled": { "type": "boolean" },
                  "clientEnvironmentName": { "type": "string" },
                  "generateRateCodeStatsEnabled": { "type": "boolean" },
                  "resetVirtualSuiteCounts": { "type": "boolean" },
                  "generateHotelActivityFromRoomTypeActivity":
                    { "type": "boolean" },
                  "useMaxRateValueForShares": { "type": "boolean" },
                  "adjustIdpSoldsUsingSkewingFactor": { "type": "boolean" },
                  "salesAndCateringUnitOfMeasure": { "type": "string" },
                  "salesAndCateringStatus": { "type": "string" },
                  "staticLRV": { "type": "boolean" },
                  "summaryPersistenceEnabled": { "type": "boolean" },
                  "msrtSummaryPersistenceEnabled": { "type": "boolean" },
                  "buildMSActivityUsingPMSMS": { "type": "boolean" },
                  "inboundDataPullingIsRequired": { "type": "boolean" },
                  "outgoingUrl": { "type": "string" },
                  "outgoingLrvUrl": { "type": "string" },
                  "outgoingDailyBarUrl": { "type": "string" },
                  "outgoingOverbookingUrl": { "type": "string" },
                  "usePastInventoryForStatsAlways": { "type": "boolean" },
                  "alternateHTNGGroupsFlow": { "type": "boolean" },
                  "defaultMarketSegmentCode": { "type": "string" },
                  "defaultGroupMarketSegmentCode": { "type": "string" },
                  "processSoftPickups": { "type": "boolean" },
                  "folsUseCloudProcessing": { "type": "boolean" },
                  "rraUseCloudProcessing": { "type": "boolean" },
                  "alternateHTNGNamespace": { "type": "boolean" },
                  "reservationTypesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "htngDecisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "reservationStatusesToFilter":
                    { "type": "array", "items": { "type": "string" } },
                  "mergeGroupBlocksForHeaderOnlyCancel": { "type": "boolean" },
                  "mergeGroupBlocksRatesIfMissing": { "type": "boolean" },
                  "externalPropertyId": { "type": "string" },
                  "adjustReservationNetRates": { "type": "string" },
                  "inventoryLoadingCronScheduleInUTC": { "type": "string" },
                  "timeSliceDefinitionIds": { "type": "string" },
                  "ignoreRateDetails": { "type": "boolean" },
                  "runGroupAutoWash": { "type": "boolean" },
                  "handleDayUseToNonDayUseReservationConversion":
                    { "type": "boolean" },
                  "performanceMonitorEnabled": { "type": "boolean" },
                  "useNewMarketSegmentMappingLogic": { "type": "boolean" },
                  "cloudMigrationStatus": { "type": "string" },
                  "oxiUseCloudProcessing": { "type": "boolean" },
                  "operaResortCode": { "type": "string" },
                  "decisionsThreshold":
                    { "type": "integer", "format": "int32" },
                  "pseudoRoomTypes":
                    { "type": "array", "items": { "type": "string" } },
                  "idpEnabled": { "type": "boolean" },
                  "isAgentThroughNgiEnabled": { "type": "boolean" },
                  "isEmulatorReplayPopulationEnabled": { "type": "boolean" },
                  "autoCancellationOfReservationsForAgentEnabled":
                    { "type": "boolean" },
                  "populationChunkSize":
                    { "type": "integer", "format": "int32" },
                  "readChunkSize": { "type": "integer", "format": "int32" },
                  "nextTaskDelay": { "type": "integer", "format": "int32" },
                  "groupPastDays": { "type": "integer", "format": "int32" },
                  "activityDataPresendSanityCheckEnabled":
                    { "type": "boolean" },
                  "feedRequestDelay": { "type": "integer", "format": "int32" },
                  "htngUseCloudProcessing": { "type": "boolean" },
                  "preprocessingRequired": { "type": "boolean" },
                  "handleRoomTypeChangesInShares": { "type": "boolean" },
                  "htngIgnoreRoomRatesWithoutRateCode": { "type": "boolean" },
                  "salesAndCateringRMSCurrencyCode": { "type": "string" },
                  "htngCallbackOnCloudDisabled": { "type": "boolean" },
                  "uploadAdultsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildrenRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadChildAgeBucketsRateUpTo":
                    { "type": "integer", "format": "int32" },
                  "uploadExtraAdultRates": { "type": "boolean" },
                  "uploadExtraChildRates": { "type": "boolean" },
                  "useSihotShortReservationId": { "type": "boolean" },
                  "inventoryStalenessCheckEnabled": { "type": "boolean" },
                  "rebuildRoomTypeMarketSegmentSummary": { "type": "boolean" },
                  "mapRatePlanMarketCode": { "type": "boolean" },
                  "enableNucleusExchangeRates": { "type": "boolean" },
                  "disableMixedExchangeRates": { "type": "boolean" },
                  "intermediateExchangeCurrency": { "type": "string" },
                  "componentRoomsActivityEnabled": { "type": "boolean" },
                },
            },
          "Document":
            {
              "type": "object",
              "properties": { "empty": { "type": "boolean" } },
              "additionalProperties": { "type": "object" },
            },
          "SwaggerResource":
            {
              "type": "object",
              "properties":
                {
                  "name": { "type": "string" },
                  "location": { "type": "string" },
                  "swaggerVersion": { "type": "string" },
                },
            },
          "UiConfiguration":
            {
              "type": "object",
              "properties":
                {
                  "validatorUrl": { "type": "string" },
                  "docExpansion": { "type": "string" },
                  "apisSorter": { "type": "string" },
                  "defaultModelRendering": { "type": "string" },
                  "requestTimeout": { "type": "integer", "format": "int64" },
                  "supportedSubmitMethods":
                    { "type": "array", "items": { "type": "string" } },
                  "jsonEditor": { "type": "boolean" },
                  "showRequestHeaders": { "type": "boolean" },
                },
            },
          "SecurityConfiguration":
            {
              "type": "object",
              "properties":
                {
                  "clientId": { "type": "string" },
                  "clientSecret": { "type": "string" },
                  "realm": { "type": "string" },
                  "appName": { "type": "string" },
                  "apiKey": { "type": "string" },
                  "apiKeyVehicle": { "type": "string" },
                  "scopeSeparator": { "type": "string" },
                  "apiKeyName": { "type": "string" },
                },
            },
        },
    },
}
